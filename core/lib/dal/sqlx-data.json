{
  "db": "PostgreSQL",
  "0016b523dc81ee51f566cf5f226a2a0b53c51e7d02318d6c23a55eb92cfa7f94": {
    "describe": {
      "columns": [
        {
          "name": "initial_write_l1_batch_number?",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "current_l1_batch_number?",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT (SELECT l1_batch_number FROM initial_writes WHERE hashed_key = $1) as \"initial_write_l1_batch_number?\",\n                    (SELECT miniblocks.l1_batch_number FROM miniblocks WHERE number = $2) as \"current_l1_batch_number?\"\n                "
  },
  "01189407fab9be050ae75249f75b9503343500af700f00721e295871fa969172": {
    "describe": {
      "columns": [
        {
          "name": "l2_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l2_address FROM tokens WHERE well_known = true"
  },
  "01ebdc5b524e85033fb06d9166475f365643f744492e59ff12f10b419dd6d485": {
    "describe": {
      "columns": [
        {
          "name": "bytecode_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT bytecode_hash FROM factory_deps WHERE miniblock_number > $1"
  },
  "021e878567c19a5ec20c79949da5286985f7b17d7b272e24f9a5c194050ec783": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "symbol",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "name",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "decimals",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "usd_price",
          "ordinal": 5,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT l1_address, l2_address, symbol, name, decimals, usd_price\n                FROM tokens\n                WHERE l2_address = $1\n                "
  },
  "03a34f0fd82bed22f14c5b36554bb958d407e9724fa5ea5123edc3c6607e545c": {
    "describe": {
      "columns": [
        {
          "name": "block_hash?",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "address!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic1!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "topic2!",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "topic3!",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "topic4!",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "miniblock_number!",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "tx_hash!",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "tx_index_in_block!",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_block!",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_tx!",
          "ordinal": 12,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                WITH events_select AS (\n                    SELECT\n                        address, topic1, topic2, topic3, topic4, value,\n                        miniblock_number, tx_hash, tx_index_in_block,\n                        event_index_in_block, event_index_in_tx\n                    FROM events\n                    WHERE miniblock_number > $1\n                    ORDER BY miniblock_number ASC, event_index_in_block ASC\n                )\n                SELECT miniblocks.hash as \"block_hash?\",\n                    address as \"address!\", topic1 as \"topic1!\", topic2 as \"topic2!\", topic3 as \"topic3!\", topic4 as \"topic4!\", value as \"value!\",\n                    miniblock_number as \"miniblock_number!\", miniblocks.l1_batch_number as \"l1_batch_number?\", tx_hash as \"tx_hash!\",\n                    tx_index_in_block as \"tx_index_in_block!\", event_index_in_block as \"event_index_in_block!\", event_index_in_tx as \"event_index_in_tx!\"\n                FROM events_select\n                INNER JOIN miniblocks ON events_select.miniblock_number = miniblocks.number\n                ORDER BY miniblock_number ASC, event_index_in_block ASC\n                "
  },
  "073d304fe756940303f00b514ef1e24036a1d3d3c3c7fb204b484f681a3520d7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "UPDATE eth_txs\n                    SET confirmed_eth_tx_history_id = $1\n                    WHERE id = $2"
  },
  "077913dcb33f255fad3f6d81a46a5acad9074cf5c03216430ca1a959825a057a": {
    "describe": {
      "columns": [
        {
          "name": "max",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                    SELECT MAX(l1_batch_number) FROM witness_inputs\n                    WHERE merkel_tree_paths_blob_url IS NOT NULL\n                "
  },
  "07f14f401347d74b8bb3595f5ec75e6379a8af0e2e4cbd5ee78d70583925d60b": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 33,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 36,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 41,
          "type_info": "Int4"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT number, timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, created_at, updated_at, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, predicted_commit_gas_cost, predicted_prove_gas_cost, predicted_execute_gas_cost, initial_bootloader_heap_content, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, bootloader_code_hash, default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, skip_proof, gas_per_pubdata_byte_in_block, gas_per_pubdata_limit\n                FROM\n                (SELECT l1_batches.*, row_number() over (order by number ASC) as row_number\n                 FROM l1_batches\n                 LEFT JOIN prover_jobs ON prover_jobs.l1_batch_number = l1_batches.number\n                    WHERE eth_commit_tx_id IS NOT NULL\n                      AND prover_jobs.aggregation_round = 3\n                      AND prover_jobs.status = 'successful'\n                      AND l1_batches.number > $1\n                    ORDER BY number LIMIT $2) inn\n                WHERE number - row_number = $1\n                "
  },
  "0b934f7671826b45d5a6f95f30ae13f073a16bc54b1b933b52681901c676d623": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                    SELECT * FROM transactions\n                    WHERE miniblock_number IS NOT NULL AND l1_batch_number IS NULL\n                    ORDER BY miniblock_number, index_in_block\n                "
  },
  "0cd13b94dc52a1a5228ed7a7c673add0aaf39a8bb378b97f49f256cb233b8a63": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "DELETE FROM contract_verification_zksolc_versions"
  },
  "0d1bed183c38304ff1a6c8c78dca03964e2e188a6d01f98eaf0c6b24f19b8b6f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "UPDATE transactions SET in_mempool = FALSE FROM UNNEST ($1::bytea[]) AS s(address) WHERE transactions.in_mempool = TRUE AND transactions.initiator_address = s.address"
  },
  "0d99b4015b29905862991e4f1a44a1021d48f50e99cb1701e7496ce6c3e15dc6": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(number) as \"number\" FROM l1_batches WHERE is_finished = TRUE"
  },
  "0f8a603899280c015b033c4160bc064865103e9d6d63a369f07a8e5d859a7b14": {
    "describe": {
      "columns": [
        {
          "name": "timestamp",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT timestamp FROM miniblocks WHERE number = $1"
  },
  "0fd885074c624bea478ec0a24a499cf1278773cdba92550439da5d3b70cbf38c": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status!",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT COUNT(*) as \"count!\", status as \"status!\"\n                FROM prover_jobs\n                GROUP BY status\n                "
  },
  "13f9c910b12ede287fe5ee753c9a3bf87a06216a320a58170608b9c81dc14b14": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT tx_hash FROM eth_txs_history\n                WHERE eth_tx_id = $1 AND confirmed_at IS NOT NULL"
  },
  "151aa7cab859c275f74f981ed146415e1e5242ebe259552d5b9fac333c0d9ce8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs\n                SET is_blob_cleaned=TRUE\n                WHERE l1_batch_number = ANY($1);\n            "
  },
  "157fc4ef4f5fd831399219850bc59ec0bd32d938ec8685dacaf913efdccfe7fe": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Numeric"
        ]
      }
    },
    "query": "SELECT l1_address FROM tokens WHERE market_volume > $1"
  },
  "17a42a97e87a675bd465103ebedc63d6d091e5bb093c7905de70aed3dc71d823": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM storage_logs WHERE miniblock_number > $1"
  },
  "19b89495be8aa735db039ccc8a262786c58e54f132588c48f07d9537cf21d3ed": {
    "describe": {
      "columns": [
        {
          "name": "sent_at_block",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT sent_at_block FROM eth_txs_history WHERE eth_tx_id = $1 AND sent_at_block IS NOT NULL ORDER BY created_at ASC LIMIT 1"
  },
  "1a91acea72e56513a2a9e667bd5a2c171baa5fec01c51dcb7c7cf33f736c854d": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "index_in_block",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "block_number",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "error",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "transfer_to?",
          "ordinal": 7,
          "type_info": "Jsonb"
        },
        {
          "name": "execute_contract_address?",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "tx_format?",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "gas_limit",
          "ordinal": 11,
          "type_info": "Numeric"
        },
        {
          "name": "block_hash?",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "contract_address?",
          "ordinal": 14,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        null,
        null,
        true,
        false,
        true,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                WITH sl AS (\n                    SELECT * FROM storage_logs\n                    WHERE storage_logs.address = $1 AND storage_logs.tx_hash = $2\n                    ORDER BY storage_logs.miniblock_number DESC, storage_logs.operation_number DESC\n                    LIMIT 1\n                )\n                SELECT\n                     transactions.hash as tx_hash,\n                     transactions.index_in_block as index_in_block,\n                     transactions.l1_batch_tx_index as l1_batch_tx_index,\n                     transactions.miniblock_number as block_number,\n                     transactions.error as error,\n                     transactions.effective_gas_price as effective_gas_price,\n                     transactions.initiator_address as initiator_address,\n                     transactions.data->'to' as \"transfer_to?\",\n                     transactions.data->'contractAddress' as \"execute_contract_address?\",\n                     transactions.tx_format as \"tx_format?\",\n                     transactions.refunded_gas as refunded_gas,\n                     transactions.gas_limit as gas_limit,\n                     miniblocks.hash as \"block_hash?\",\n                     miniblocks.l1_batch_number as \"l1_batch_number?\",\n                     sl.key as \"contract_address?\"\n                FROM transactions\n                LEFT JOIN miniblocks\n                    ON miniblocks.number = transactions.miniblock_number\n                LEFT JOIN sl\n                    ON sl.value != $3\n                WHERE transactions.hash = $2\n                "
  },
  "1c1a4cdf476de4f4cc83a31151fc4c407b93b53e2cd995f8bb5222d0a3c38c47": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "root_hash?",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "commit_tx_hash?",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "committed_at?",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "prove_tx_hash?",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "proven_at?",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "execute_tx_hash?",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "executed_at?",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 13,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batches.number,\n                        l1_batches.timestamp,\n                        l1_batches.l1_tx_count,\n                        l1_batches.l2_tx_count,\n                        l1_batches.hash as \"root_hash?\",\n                        commit_tx.tx_hash as \"commit_tx_hash?\",\n                        commit_tx.confirmed_at as \"committed_at?\",\n                        prove_tx.tx_hash as \"prove_tx_hash?\",\n                        prove_tx.confirmed_at as \"proven_at?\",\n                        execute_tx.tx_hash as \"execute_tx_hash?\",\n                        execute_tx.confirmed_at as \"executed_at?\",\n                        l1_batches.l1_gas_price,\n                        l1_batches.l2_fair_gas_price,\n                        l1_batches.bootloader_code_hash,\n                        l1_batches.default_aa_code_hash\n                    FROM l1_batches\n                    LEFT JOIN eth_txs_history as commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id AND commit_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id AND prove_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id AND execute_tx.confirmed_at IS NOT NULL)\n                    WHERE l1_batches.number = $1\n                "
  },
  "1d26bb777f103d83523d223071eaa8391049c0efec9406e37003ac08065d389f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bool",
          "Bytea",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE l1_batches\n                    SET hash = $1, merkle_root_hash = $2, commitment = $3, default_aa_code_hash = $4,\n                        compressed_repeated_writes = $5, compressed_initial_writes = $6, l2_l1_compressed_messages = $7,\n                        l2_l1_merkle_root = $8,\n                        zkporter_is_available = $9, bootloader_code_hash = $10, rollup_last_leaf_index = $11,\n                        aux_data_hash = $12, pass_through_data_hash = $13, meta_parameters_hash = $14,\n                        updated_at = now()\n                    WHERE number = $15\n                "
  },
  "1d3e9cd259fb70a2bc81e8344576c3fb27b47ad6cdb6751d2a9b8c8d342b7a75": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = $1, updated_at = now()\n                WHERE id = $2\n                "
  },
  "1eede5c2169aee5a767b3b6b829f53721c0c353956ccec31a75226a65325ae46": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "UPDATE transactions SET in_mempool = FALSE WHERE in_mempool = TRUE"
  },
  "1f3e41f4ac5b1f6e735f1c422c0098ed534d9e8fe84e98b3234e893e8a2c5085": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "SELECT eth_txs.id FROM eth_txs_history JOIN eth_txs\n                ON eth_txs.confirmed_eth_tx_history_id = eth_txs_history.id\n                WHERE eth_txs_history.tx_hash = $1"
  },
  "1faf6552c221c75b7232b55210c0c37be76a57ec9dc94584b6ccb562e8b182f2": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * from prover_jobs where id=$1"
  },
  "206eaafbd834d16f37c47a06c8bbb8da8b23ed1eab9c5c5958e31832ced6f9f0": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE id = (\n                    SELECT id\n                    FROM prover_jobs\n                    WHERE status = 'queued'\n                    ORDER BY aggregation_round DESC, l1_batch_number ASC, id ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING prover_jobs.*\n                "
  },
  "227daa1e8d647c207869d7c306d9d13a38c6baf07281cf72cd93d20da2e3cf3c": {
    "describe": {
      "columns": [
        {
          "name": "exists",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT true as \"exists\"\n                    FROM (\n                        SELECT * FROM storage_logs\n                        WHERE hashed_key = $1\n                        ORDER BY miniblock_number DESC, operation_number DESC\n                        LIMIT 1\n                    ) sl\n                    WHERE sl.value != $2\n                "
  },
  "22b57675a726d9cfeb82a60ba50c36cab1548d197ea56a7658d3f005df07c60b": {
    "describe": {
      "columns": [
        {
          "name": "op_id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(priority_op_id) as \"op_id\" from transactions where is_priority = true AND miniblock_number IS NOT NULL"
  },
  "230cbdfecc31d22f490d98e52dacd69739b654491042dc32a0f5e672281822f7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "update storage set value = $1 where hashed_key = $2"
  },
  "2397c1a050d358b596c9881c379bf823e267c03172f72c42da84cc0c04cc9d93": {
    "describe": {
      "columns": [
        {
          "name": "miniblock_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "index_in_block!",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "l1_batch_tx_index!",
          "ordinal": 3,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT miniblock_number as \"miniblock_number!\",\n                        hash, index_in_block as \"index_in_block!\", l1_batch_tx_index as \"l1_batch_tx_index!\"\n                    FROM transactions\n                    WHERE l1_batch_number = $1\n                    ORDER BY miniblock_number, index_in_block\n                "
  },
  "249d8c0334a8a1a4ff993f72f5245dc55c60773732bfe7596dc5f05f34c15131": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "INSERT INTO eth_txs (raw_tx, nonce, tx_type, contract_address, predicted_gas_cost, created_at, updated_at)\n                    VALUES ('\\x00', 0, $1, '', 0, now(), now())\n                    RETURNING id"
  },
  "24abd3109457403cbb8dc59f8805e0426d6da3b766ddae1516d45ad0b1277bc7": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 30,
          "type_info": "Int4"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 32,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 35,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 41,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM l1_batches\n                 WHERE eth_commit_tx_id = $1 OR eth_prove_tx_id = $1 OR eth_execute_tx_id = $1"
  },
  "b0533ba23f8cc2fe66b1f4d58d4133d2914e9da15c619fca4e913224c8f4c059": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM l1_batches WHERE eth_commit_tx_id = $1 OR eth_prove_tx_id = $1 OR eth_execute_tx_id = $1"
  },
  "251d3e3615046ec5f061cfba65dc5ad891ee7fa315abe39aedbd291e36140610": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "topic2!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic3!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT tx_hash, topic2 as \"topic2!\", topic3 as \"topic3!\", value as \"value!\",\n                    tokens.l1_address as \"l1_address!\", tokens.l2_address as \"l2_address!\",\n                    tokens.symbol as \"symbol!\", tokens.name as \"name!\", tokens.decimals as \"decimals!\", tokens.usd_price as \"usd_price?\"\n                FROM events\n                INNER JOIN tokens ON\n                    events.topic4 = ('\\x000000000000000000000000'::bytea || tokens.l2_address)\n                WHERE tx_hash = ANY($1) AND events.topic1 = $2 AND events.address = $3\n                "
  },
  "252c1398bf08802e9dc038f7c9d95cc9d56cbf760d7de5a48f014478850daede": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "scheduler_witness_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "final_node_aggregations_blob_url",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number, scheduler_witness_blob_url, final_node_aggregations_blob_url FROM scheduler_witness_jobs\n                    WHERE status='successful' AND is_blob_cleaned=FALSE\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                    AND scheduler_witness_blob_url is NOT NULL\n                    AND final_node_aggregations_blob_url is NOT NULL\n                    LIMIT $1;\n                "
  },
  "2911797974d340cc75bb628866c24f77665e3dca3954f0c83860da488265f5c6": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 2,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT address, key, value\n                FROM storage_logs\n                WHERE miniblock_number BETWEEN (SELECT MIN(number) FROM miniblocks WHERE l1_batch_number = $1)\n                    AND (SELECT MAX(number) FROM miniblocks WHERE l1_batch_number = $1)\n                ORDER BY miniblock_number, operation_number\n                "
  },
  "2b07fff3b8f793c010c0bd6f706d7c43786305e3335fd6ae344664ec60f815a8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "DELETE FROM contract_verification_solc_versions"
  },
  "2b22e7d15adf069c8e68954059b83f71a71350f3325b4280840c4be7e54a319f": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Varchar"
        },
        {
          "name": "symbol",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "decimals",
          "ordinal": 4,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l1_address, l2_address, name, symbol, decimals FROM tokens\n                 WHERE well_known = true\n                 ORDER BY symbol"
  },
  "2c136284610f728ddba3e255d7dc573b10e4baf9151de194b7d8e0dc40c40602": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Jsonb"
        ]
      }
    },
    "query": "INSERT INTO transaction_traces (tx_hash, trace, created_at, updated_at) VALUES ($1, $2, now(), now())"
  },
  "2eea5d279edc2b23cab00d2be00d046f741552e5d86dfdf61d7e3847a4bb65d8": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT COUNT(*) as \"count!\"\n                    FROM contracts_verification_info\n                    WHERE address = $1\n                "
  },
  "2f5f9182c87944bf7856ee8e6036e49118477c62d3085c4bab32150f268dfa58": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bool",
          "Bytea",
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE l1_batches SET\n                        hash = $1, merkle_root_hash = $2, commitment = $3, \n                        compressed_repeated_writes = $4, compressed_initial_writes = $5, l2_l1_compressed_messages = $6,\n                        l2_l1_merkle_root = $7, zkporter_is_available = $8, \n                        parent_hash = $9, rollup_last_leaf_index = $10, \n                        aux_data_hash = $11, pass_through_data_hash = $12, meta_parameters_hash = $13,\n                        updated_at = NOW()\n                    WHERE number = $14 AND hash IS NULL\n                "
  },
  "2ff4a13a75537cc30b2c3d52d3ef6237850150e4a4569adeaa4da4a9ac5bc689": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "SELECT bytecode FROM factory_deps WHERE bytecode_hash = $1 AND miniblock_number <= $2"
  },
  "3221b722354995f0705ceaf913a48aa092129bb4ff561a1104196f5b25192576": {
    "describe": {
      "columns": [
        {
          "name": "version",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT version FROM contract_verification_zksolc_versions ORDER by version"
  },
  "32236a83e1525748f736fa87d53df6005e49f21968e90af9d933359fdd3fb330": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "call_trace",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT * FROM call_traces WHERE tx_hash IN (\n                        SELECT hash FROM transactions WHERE miniblock_number = $1\n                    )\n                "
  },
  "335826f54feadf6aa30a4e7668ad3f17a2afc6bd67d4f863e3ad61fefd1bd8d2": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(number) as \"number\" FROM miniblocks"
  },
  "36c483775b604324eacd7e5aac591b927cc32abb89fe1b0c5cf4b0383e9bd443": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "leaf_layer_subqueues_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "aggregation_outputs_blob_url",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number, leaf_layer_subqueues_blob_url, aggregation_outputs_blob_url FROM node_aggregation_witness_jobs\n                    WHERE status='successful' AND is_blob_cleaned=FALSE\n                    AND leaf_layer_subqueues_blob_url is NOT NULL\n                    AND aggregation_outputs_blob_url is NOT NULL\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                    LIMIT $1;\n                "
  },
  "38a3bdae346fdd362452af152c6886c93696dd2db561f6622f8eaf6fabb1e5be": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Text",
          "Timestamp"
        ]
      }
    },
    "query": "INSERT INTO eth_txs_history\n                    (eth_tx_id, base_fee_per_gas, priority_fee_per_gas, tx_hash, signed_raw_tx, created_at, updated_at, confirmed_at)\n                    VALUES ($1, 0, 0, $2, '\\x00', now(), now(), $3)\n                    RETURNING id"
  },
  "393345441797999e9f11b8b5ddce0b64356e1e167056d7f76ef6dfffd3534607": {
    "describe": {
      "columns": [
        {
          "name": "name!",
          "ordinal": 0,
          "type_info": "Varchar"
        },
        {
          "name": "symbol!",
          "ordinal": 1,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null,
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT\n                    COALESCE(token_list_name, name) as \"name!\",\n                    COALESCE(token_list_symbol, symbol) as \"symbol!\",\n                    COALESCE(token_list_decimals, decimals) as \"decimals!\"\n                FROM tokens WHERE l2_address = $1\n                "
  },
  "394bbd64939d47fda4e1545e2752b208901e872b7234a5c3af456bdf429a6074": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "call_trace",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT * FROM call_traces\n                    WHERE tx_hash = $1\n                "
  },
  "3ac1fe562e9664bbf8c02ba3090cf97a37663e228eff48fec326f74b2313daa9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "DELETE FROM call_traces\n                 WHERE tx_hash = ANY($1)"
  },
  "3b0bfc7445faaa87f6cabb68419ebff995120d65db3a4def70d998507e699811": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "ByteaArray",
          "Int4Array",
          "VarcharArray",
          "JsonbArray",
          "Int8Array"
        ]
      }
    },
    "query": "\n                        UPDATE transactions\n                            SET\n                                miniblock_number = $1,\n                                index_in_block = data_table.index_in_block,\n                                error = NULLIF(data_table.error, ''),\n                                in_mempool=FALSE,\n                                execution_info = execution_info || data_table.new_execution_info,\n                                refunded_gas = data_table.refunded_gas,\n                                updated_at = now()\n                        FROM\n                            (\n                                SELECT\n                                    UNNEST($2::bytea[]) AS hash,\n                                    UNNEST($3::integer[]) AS index_in_block,\n                                    UNNEST($4::varchar[]) AS error,\n                                    UNNEST($5::jsonb[]) AS new_execution_info,\n                                    UNNEST($6::bigint[]) as refunded_gas\n                            ) AS data_table\n                        WHERE transactions.hash = data_table.hash\n                    "
  },
  "3c582aeed32235ef175707de412a9f9129fad6ea5e87ebb85f68e20664b0da46": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4Array",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE transactions\n                    SET \n                        l1_batch_number = $3,\n                        l1_batch_tx_index = data_table.l1_batch_tx_index,\n                        updated_at = now()\n                    FROM\n                        (SELECT\n                                UNNEST($1::int[]) AS l1_batch_tx_index,\n                                UNNEST($2::bytea[]) AS hash\n                        ) AS data_table\n                    WHERE transactions.hash=data_table.hash \n                "
  },
  "3cb9fd0e023940d4e30032a9b0528a95513468ebf701557153c5f1417bdb847f": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Text",
          "Text",
          "Text",
          "Text",
          "Bool",
          "Bytea",
          "Bool"
        ]
      }
    },
    "query": "\n                INSERT INTO contract_verification_requests (\n                    contract_address,\n                    source_code,\n                    contract_name,\n                    compiler_zksolc_version,\n                    compiler_solc_version,\n                    optimization_used,\n                    constructor_arguments,\n                    is_system,\n                    status,\n                    created_at,\n                    updated_at\n                )\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, 'queued', now(), now())\n                RETURNING id\n                "
  },
  "3d41f05e1d5c5a74e0605e66fe08e09f14b8bf0269e5dcde518aa08db92a3ea0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM events WHERE miniblock_number > $1"
  },
  "3de5668eca2211f9701304e374100d45b359b1f7832d4a30b325fa679012c3e7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Numeric",
          "Timestamp"
        ]
      }
    },
    "query": "UPDATE tokens SET market_volume = $2, market_volume_updated_at = $3, updated_at = now() WHERE l1_address = $1"
  },
  "3f86b7cb793dd8849af45ff3de4eabb80082a1cf8b213be607e6e13bb3d6710d": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "basic_circuits",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "basic_circuits_inputs",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "number_of_basic_circuits",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 6,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "attempts",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "basic_circuits_blob_url",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "basic_circuits_inputs_blob_url",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 13,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE l1_batch_number = (\n                    SELECT l1_batch_number\n                    FROM leaf_aggregation_witness_jobs\n                    WHERE l1_batch_number <= $3\n                    AND\n                    (   status = 'queued'\n                        OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                        OR (status = 'failed' AND attempts < $2)\n                    )\n                    ORDER BY l1_batch_number ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING leaf_aggregation_witness_jobs.*\n                "
  },
  "40a86f39a74ab22bdcd8b40446ea063c68bfb3e930e3150212474a657e82b38f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text"
        ]
      }
    },
    "query": "\n                    UPDATE scheduler_witness_jobs\n                        SET final_node_aggregations_blob_url = $2,\n                         status = 'waiting_for_proofs',\n                         updated_at = now()\n                    WHERE l1_batch_number = $1 AND status != 'queued'\n                    "
  },
  "41913b02b13a0dad87268c5e0d673d9f04d5207ab6a48b63004e6c3ed07b93bc": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 30,
          "type_info": "Int4"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 32,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 35,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 41,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT * FROM l1_batches WHERE number = 0 OR eth_commit_tx_id IS NOT NULL AND commitment IS NOT NULL ORDER BY number DESC LIMIT 1"
  },
  "42d2c16694dbf70205748008a18424bcbb689aff8317079dc6d60c411541167d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE l1_batches\n                    SET predicted_commit_gas_cost = $2, updated_at = now()\n                    WHERE number = $1\n                "
  },
  "433d5da4d72150cf2c1e1007ee3ff51edfa51924f4b662b8cf382f06e60fd228": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                    UPDATE node_aggregation_witness_jobs\n                        SET number_of_leaf_circuits = $1,\n                            leaf_layer_subqueues_blob_url = $3,\n                            aggregation_outputs_blob_url = $4,\n                            status = 'waiting_for_proofs',\n                            updated_at = now()\n                    WHERE l1_batch_number = $2 AND status != 'queued'\n                    "
  },
  "438ea2edcf2e5ec1ec8b05da4d634e914e4d892441b6f2926f0926c7c90e33d1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Text",
          "Jsonb"
        ]
      }
    },
    "query": "INSERT INTO contract_sources (address, assembly_code, pc_line_mapping, created_at, updated_at)\n                VALUES ($1, $2, $3, now(), now())\n                ON CONFLICT (address)\n                DO UPDATE SET assembly_code = $2, pc_line_mapping = $3, updated_at = now()\n                "
  },
  "43f48f445f7e1627123e04b56c1899d1eee17c44411f3cbc59a809e3b16c158c": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT DISTINCT ON (hashed_key) hashed_key FROM\n                (SELECT * FROM storage_logs WHERE miniblock_number > $1) inn"
  },
  "474c72dc36171ee1983e0eb4272cdbc180e3773093280556e8e5229b68bc793d": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "block_hash?",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "miniblock_timestamp?",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "eth_commit_tx_hash?",
          "ordinal": 37,
          "type_info": "Text"
        },
        {
          "name": "eth_prove_tx_hash?",
          "ordinal": 38,
          "type_info": "Text"
        },
        {
          "name": "eth_execute_tx_hash?",
          "ordinal": 39,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT transactions.*, miniblocks.hash as \"block_hash?\",\n                        miniblocks.timestamp as \"miniblock_timestamp?\",\n                        commit_tx.tx_hash as \"eth_commit_tx_hash?\",\n                        prove_tx.tx_hash as \"eth_prove_tx_hash?\",\n                        execute_tx.tx_hash as \"eth_execute_tx_hash?\"\n                    FROM transactions\n                    LEFT JOIN miniblocks ON miniblocks.number = transactions.miniblock_number\n                    LEFT JOIN l1_batches ON l1_batches.number = miniblocks.l1_batch_number\n                    LEFT JOIN eth_txs_history as commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id AND commit_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id AND prove_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id AND execute_tx.confirmed_at IS NOT NULL)\n                    WHERE transactions.hash = $1\n                "
  },
  "4a8a5df72c08e9a3423e93be72dd63c38daefd644977685384327689892e68cd": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "contract_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "source_code",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "contract_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "compiler_zksolc_version",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "optimization_used",
          "ordinal": 5,
          "type_info": "Bool"
        },
        {
          "name": "constructor_arguments",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "compilation_errors",
          "ordinal": 11,
          "type_info": "Jsonb"
        },
        {
          "name": "processing_started_at",
          "ordinal": 12,
          "type_info": "Timestamp"
        },
        {
          "name": "compiler_solc_version",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "panic_message",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_system",
          "ordinal": 16,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT * FROM contract_verification_requests\n                WHERE status = 'successful'\n                ORDER BY id"
  },
  "4ab8a25620b5400d836e1b847320d4e176629a27e1a6cb0666ab02bb55371769": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "DELETE FROM transactions WHERE miniblock_number IS NULL AND received_at < now() - $1::interval AND is_priority=false AND error IS NULL RETURNING hash"
  },
  "4ac92a8436108097a32e94e53f7fe99261c7c3a40dbc433c20ccea3a7d06650c": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "SELECT hashed_key, value as \"value!\" FROM storage WHERE hashed_key = ANY($1)"
  },
  "4acb725974d006c388be8965c3dff2e4c538ab8d2366addb3fb8cff3b789f114": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM storage_logs WHERE miniblock_number = $1"
  },
  "4bab972cbbd8b53237a840ba9307079705bd4b5270428d2b41f05ee3d2aa42af": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                    SELECT MIN(l1_batch_number) as \"l1_batch_number!\", circuit_type\n                    FROM prover_jobs\n                    WHERE aggregation_round = 0 AND (status = 'queued' OR status = 'in_progress'\n                    OR status = 'in_gpu_proof'\n                    OR status = 'failed')\n                    GROUP BY circuit_type\n                "
  },
  "4c0d2aa6e08f3b4748b88cad5cf7b3a9eb9c051e8e8e747a3c38c1b37ce3a6b7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM l2_to_l1_logs WHERE miniblock_number > $1"
  },
  "4ca0356959e4cc50e09b6fe08e9d45cbd929601935506acbbade4a42c2eaea89": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Text"
        ]
      }
    },
    "query": "\n                    INSERT INTO scheduler_witness_jobs\n                        (l1_batch_number, scheduler_witness, scheduler_witness_blob_url, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, 'waiting_for_artifacts', now(), now())\n                    "
  },
  "4d7b5a423b29ce07bd12f168d1ee707e6e413d9a4f0daafb4beed102d22d1745": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT address, key FROM protective_reads\n                WHERE l1_batch_number = $1\n                "
  },
  "4dc63a4431062cb1ae428db625251a6121c3aa2fc06e045ae07b3db6d2f66406": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs\n                SET is_blob_cleaned=TRUE\n                WHERE l1_batch_number = ANY($1);\n            "
  },
  "4e2b733fea9ca7cef542602fcd80acf1a9d2e0f1e22566f1076c4837e3ac7e61": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "instance_host",
          "ordinal": 1,
          "type_info": "Inet"
        },
        {
          "name": "instance_port",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "instance_status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "queue_free_slots",
          "ordinal": 7,
          "type_info": "Int4"
        },
        {
          "name": "queue_capacity",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "specialized_prover_group_id",
          "ordinal": 9,
          "type_info": "Int2"
        },
        {
          "name": "region",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "zone",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "num_gpu",
          "ordinal": 12,
          "type_info": "Int2"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int2",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET instance_status = 'reserved',\n                    updated_at = now(),\n                    processing_started_at = now()\n                WHERE id in (\n                    SELECT id\n                    FROM gpu_prover_queue\n                    WHERE specialized_prover_group_id=$2\n                    AND region=$3\n                    AND zone=$4\n                    AND (\n                        instance_status = 'available'\n                        OR (instance_status = 'reserved' AND  processing_started_at < now() - $1::interval)\n                    )\n                    ORDER BY updated_at ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING gpu_prover_queue.*\n                "
  },
  "5049eaa4b2050312d13a02c06e87f96548a299894d0f0b268d4e91d49c536cb6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int4Array",
          "ByteaArray",
          "ByteaArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "NumericArray",
          "Int4Array",
          "Int4Array",
          "VarcharArray",
          "NumericArray",
          "JsonbArray",
          "ByteaArray",
          "JsonbArray",
          "Int8Array",
          "NumericArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n                        UPDATE transactions\n                            SET \n                                hash = data_table.hash,\n                                signature = data_table.signature,\n                                gas_limit = data_table.gas_limit,\n                                max_fee_per_gas = data_table.max_fee_per_gas,\n                                max_priority_fee_per_gas = data_table.max_priority_fee_per_gas,\n                                gas_per_pubdata_limit = data_table.gas_per_pubdata_limit,\n                                input = data_table.input,\n                                data = data_table.data,\n                                tx_format = data_table.tx_format,\n                                miniblock_number = $21,\n                                index_in_block = data_table.index_in_block,\n                                error = NULLIF(data_table.error, ''),\n                                effective_gas_price = data_table.effective_gas_price,\n                                execution_info = data_table.new_execution_info,\n                                refunded_gas = data_table.refunded_gas,\n                                value = data_table.value,\n                                contract_address = data_table.contract_address,\n                                paymaster = data_table.paymaster,\n                                paymaster_input = data_table.paymaster_input,\n                                in_mempool = FALSE,\n                                updated_at = now()\n                        FROM\n                            (\n                                SELECT\n                                    UNNEST($1::bytea[]) AS initiator_address,\n                                    UNNEST($2::int[]) AS nonce,\n                                    UNNEST($3::bytea[]) AS hash,\n                                    UNNEST($4::bytea[]) AS signature,\n                                    UNNEST($5::numeric[]) AS gas_limit,\n                                    UNNEST($6::numeric[]) AS max_fee_per_gas,\n                                    UNNEST($7::numeric[]) AS max_priority_fee_per_gas,\n                                    UNNEST($8::numeric[]) AS gas_per_pubdata_limit,\n                                    UNNEST($9::int[]) AS tx_format,\n                                    UNNEST($10::integer[]) AS index_in_block,\n                                    UNNEST($11::varchar[]) AS error,\n                                    UNNEST($12::numeric[]) AS effective_gas_price,\n                                    UNNEST($13::jsonb[]) AS new_execution_info,\n                                    UNNEST($14::bytea[]) AS input,\n                                    UNNEST($15::jsonb[]) AS data,\n                                    UNNEST($16::bigint[]) as refunded_gas,\n                                    UNNEST($17::numeric[]) as value,\n                                    UNNEST($18::bytea[]) as contract_address,\n                                    UNNEST($19::bytea[]) as paymaster,\n                                    UNNEST($20::bytea[]) as paymaster_input\n                            ) AS data_table\n                        WHERE transactions.initiator_address=data_table.initiator_address \n                        AND transactions.nonce=data_table.nonce\n                    "
  },
  "5089dfb745ff04a9b071b5785e68194a6f6a7a72754d23a65adc7d6838f7f640": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "UPDATE eth_txs SET has_failed = TRUE WHERE id = $1"
  },
  "50f406ffe7802e753411baa0e348294bdb05c96b96b2041ee876e2b34a1a6ea6": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                        SELECT COUNT(*) as \"count!\"\n                        FROM l1_batches\n                        WHERE number = $1\n                            AND hash = $2\n                           AND merkle_root_hash = $3\n                           AND parent_hash = $4\n                           AND l2_l1_merkle_root = $5\n                    "
  },
  "516e309a97010cd1eb8398b2b7ff809786703c075e4c3dff1133c41cdcfdd3f3": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 30,
          "type_info": "Int4"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 32,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 35,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 41,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM l1_batches WHERE number = $1"
  },
  "52602518095b2a45fadab7b76218acb6964b416a103be2a3b37b3dac4a970c14": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT number, timestamp, hash, l1_tx_count, l2_tx_count,\n                        base_fee_per_gas, l1_gas_price, l2_fair_gas_price,\n                        bootloader_code_hash, default_aa_code_hash\n                    FROM miniblocks\n                    WHERE number = $1\n                "
  },
  "541d22a9ffe9c7b31833f203af0820cca4513d7a9e6feed7313757674c30e667": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 2,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                        SELECT address, key, value FROM storage_logs\n                        WHERE miniblock_number >= $1 AND miniblock_number <= $2\n                        ORDER BY miniblock_number, operation_number ASC\n                    "
  },
  "5543380548ce40063d43c1d54e368c7d385800d7ade9e720306808cc4c376978": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 30,
          "type_info": "Int4"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 32,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 35,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 41,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM l1_batches WHERE eth_prove_tx_id IS NOT NULL AND eth_execute_tx_id IS NULL ORDER BY number LIMIT $1"
  },
  "55ae3cf154fe027f9036c60d21b5fd32972fbb2b17a74562d7721ec69dd19971": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "delete from storage where hashed_key = $1"
  },
  "55debba852ef32f3b5ba6ffcb745f7b59d6888a21cb8792f8f9027e3b164a245": {
    "describe": {
      "columns": [
        {
          "name": "region",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "zone",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "total_gpus",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT region, zone, SUM(num_gpu) AS total_gpus\n                FROM gpu_prover_queue\n                GROUP BY region, zone\n               "
  },
  "57742ed088179b89b50920a2ab1a103b745598ee0ba05d1793fc54e63b477319": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET eth_commit_tx_id = $1, updated_at = now() WHERE number BETWEEN $2 AND $3"
  },
  "57b4e8fb728f1e90dc5ed80c1493471f8e9eff828c99eadc531b28a068ade83e": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "status!",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        null,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT COUNT(*) as \"count!\", circuit_type as \"circuit_type!\", status as \"status!\"\n                FROM prover_jobs\n                GROUP BY circuit_type, status\n                "
  },
  "580d973b404123108e8e8b27cd754f108a289e1556da10a466e4c795fbd23ddf": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "UPDATE eth_txs_history SET sent_at_block = $2, sent_at = now()\n                WHERE id = $1 AND sent_at_block IS NULL"
  },
  "59b10abd699d19cbdf285334162ee40f294c5fad8f99fc00a4cdb3b233a494d6": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "topic2!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic3!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT tx_hash, topic2 as \"topic2!\", topic3 as \"topic3!\", value as \"value!\",\n                    tokens.l1_address as \"l1_address!\", tokens.l2_address as \"l2_address!\",\n                    tokens.symbol as \"symbol!\", tokens.name as \"name!\", tokens.decimals as \"decimals!\", tokens.usd_price as \"usd_price?\"\n                FROM events\n                INNER JOIN tokens ON\n                    events.topic4 = ('\\x000000000000000000000000'::bytea || tokens.l2_address)\n                WHERE tx_hash = ANY($1) AND events.topic1 = $2 AND events.address = $3\n                ORDER BY tx_hash, miniblock_number ASC, event_index_in_block ASC\n                "
  },
  "5a5844af61cc685a414fcd3cad70900bdce8f48e905c105f8dd50dc52e0c6f14": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "attempts",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'failed', error = $1, updated_at = now()\n                WHERE id = $2\n                RETURNING l1_batch_number, attempts\n                "
  },
  "5ac872e2c5a00b376cc053324b3776ef6a0bb7f6850e5a24a133dfee052c49e1": {
    "describe": {
      "columns": [
        {
          "name": "value",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT value FROM storage WHERE hashed_key = $1"
  },
  "5b45825b92d6971d8b2fbad6eb68d24e1c666a54cbf1ceb1332e2039f9614d18": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\n                    INSERT INTO contract_verification_zksolc_versions (version, created_at, updated_at)\n                    SELECT u.version, now(), now()\n                        FROM UNNEST($1::text[])\n                    AS u(version)\n                "
  },
  "5b85d8bdf297f55e65978edda4a0966ded1dc0d24f4701e7b6048124f38b4cea": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "INSERT INTO factory_deps\n                (bytecode_hash, bytecode, miniblock_number, created_at, updated_at)\n            SELECT u.bytecode_hash, u.bytecode, $3, now(), now()\n            FROM UNNEST($1::bytea[], $2::bytea[])\n                AS u(bytecode_hash, bytecode)\n            ON CONFLICT (bytecode_hash) DO NOTHING\n            "
  },
  "5bc8a41ae0f255b966df2102f1bd9059d55833e0afaf6e62c7ddcc9c06de8deb": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "aggregation_round",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        null,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(l1_batch_number) as \"l1_batch_number!\", aggregation_round FROM prover_jobs \n                 WHERE status='successful'\n                 GROUP BY aggregation_round \n                "
  },
  "5bc8cdc7ed710bb2f9b0035654fd7e9dcc01731ca581c6aa75d55184817bc100": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(number) as \"number\" FROM l1_batches WHERE hash IS NOT NULL"
  },
  "5d1c3357b97f5e40a7e9d6fdcb7c3ebd8309e93f26e1c42d6371190f4aeaf8c6": {
    "describe": {
      "columns": [
        {
          "name": "min?",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "max?",
          "ordinal": 1,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT MIN(miniblocks.number) as \"min?\", MAX(miniblocks.number) as \"max?\"\n                    FROM miniblocks\n                    WHERE l1_batch_number = $1\n                "
  },
  "5e09f2359dd69380c1f183f613d82696029a56896e2b985738a2fa25d6cb8a71": {
    "describe": {
      "columns": [
        {
          "name": "op_id",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(priority_op_id) as \"op_id\" from transactions where is_priority = true"
  },
  "5f5974e7033eea82896a435c7776a6740f4a2df77175744a9670d3fee2f24b32": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "topic1",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic2",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "topic3",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "topic4",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "block_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "miniblock_number",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "tx_index_in_block",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_block",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_tx",
          "ordinal": 12,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT\n                        address, topic1, topic2, topic3, topic4, value,\n                        Null::bytea as \"block_hash\", Null::bigint as \"l1_batch_number?\",\n                        miniblock_number, tx_hash, tx_index_in_block,\n                        event_index_in_block, event_index_in_tx\n                    FROM events\n                    WHERE tx_hash = $1\n                    ORDER BY miniblock_number ASC, event_index_in_block ASC\n                    "
  },
  "604b41258da640307989571e014e8ccb4f457bba0caedcb42dc1065fc90f7950": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 30,
          "type_info": "Int4"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 32,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 35,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 41,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM l1_batches\n                WHERE eth_commit_tx_id IS NULL\n                AND number != 0\n                AND bootloader_code_hash = $1 AND default_aa_code_hash = $2\n                AND commitment IS NOT NULL\n                ORDER BY number LIMIT $3"
  },
  "61f4f5ef369b2435732af17091493876301e3e59b68d6817fe0053c7da89291e": {
    "describe": {
      "columns": [
        {
          "name": "max_nonce?",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(nonce) as \"max_nonce?\" FROM eth_txs"
  },
  "62e8b4afd4df9e30bfa08cb30c74ba4566fa2e9f4934b7a2777f9e90b49e8fce": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "DELETE FROM eth_txs_history\n                WHERE id = $1"
  },
  "64b1bce209f43ee9f8294a270047cd58c20b973d8fef29c662742cad89363ffe": {
    "describe": {
      "columns": [
        {
          "name": "status",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "compilation_errors",
          "ordinal": 2,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT status, error, compilation_errors FROM contract_verification_requests\n                WHERE id = $1\n                "
  },
  "65bf55ff4ac5c4ac60bedd7c5b39d82f6e8793859749a7b6ab56121f623ed840": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "commit_gas?",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "commit_base_gas_price?",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "commit_priority_gas_price?",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "prove_gas?",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "prove_base_gas_price?",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "prove_priority_gas_price?",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "execute_gas?",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "execute_base_gas_price?",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "execute_priority_gas_price?",
          "ordinal": 9,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        true,
        false,
        false,
        true,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT\n                        l1_batches.number,\n                        commit_tx_data.gas_used as \"commit_gas?\",\n                        commit_tx.base_fee_per_gas as \"commit_base_gas_price?\",\n                        commit_tx.priority_fee_per_gas as \"commit_priority_gas_price?\",\n                        prove_tx_data.gas_used as \"prove_gas?\",\n                        prove_tx.base_fee_per_gas as \"prove_base_gas_price?\",\n                        prove_tx.priority_fee_per_gas as \"prove_priority_gas_price?\",\n                        execute_tx_data.gas_used as \"execute_gas?\",\n                        execute_tx.base_fee_per_gas as \"execute_base_gas_price?\",\n                        execute_tx.priority_fee_per_gas as \"execute_priority_gas_price?\"\n                    FROM l1_batches\n                    LEFT JOIN eth_txs_history as commit_tx\n                        ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id AND commit_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs as commit_tx_data\n                        ON (l1_batches.eth_commit_tx_id = commit_tx_data.id)\n                    LEFT JOIN eth_txs_history as prove_tx\n                        ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id AND prove_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs as prove_tx_data\n                        ON (l1_batches.eth_prove_tx_id = prove_tx_data.id)\n                    LEFT JOIN eth_txs_history as execute_tx\n                        ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id AND execute_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs as execute_tx_data\n                        ON (l1_batches.eth_execute_tx_id = execute_tx_data.id)\n                    WHERE l1_batches.number = $1\n                "
  },
  "66a3761aec92aa8794e55ddd8299879e915e8ef84f8be9ebca9881c77438d2c8": {
    "describe": {
      "columns": [
        {
          "name": "value",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                            SELECT value FROM storage_logs\n                            WHERE hashed_key = $1 AND miniblock_number <= $2\n                            ORDER BY miniblock_number DESC, operation_number DESC\n                            LIMIT 1\n                            "
  },
  "67a47f1e7d5f8dafcef94bea3f268b4baec1888c6ef11c92ab66480ecdcb9aef": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Time",
          "Bytea",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'successful', updated_at = now(), time_taken = $1, result = $2, proccesed_by = $3\n                WHERE id = $4\n                "
  },
  "67b861c97d16bf99a2d305c100116cbcb0334473c4462e4164436885481197fb": {
    "describe": {
      "columns": [
        {
          "name": "total_transactions!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT COUNT(*) as \"total_transactions!\"\n                FROM transactions\n                WHERE contract_address = $1\n                "
  },
  "67ecdc69e39e689f1f23f867d31e6b8c47e9c041e18cbd84a2ad6482a9be4e74": {
    "describe": {
      "columns": [
        {
          "name": "l2_to_l1_logs",
          "ordinal": 0,
          "type_info": "ByteaArray"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT l2_to_l1_logs FROM l1_batches WHERE number = $1"
  },
  "67efc7ea5bd3821d8325759ed8357190f6122dd2ae503a57faf15d8b749a4361": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs\n                SET status='queued'\n                WHERE l1_batch_number IN\n                      (SELECT prover_jobs.l1_batch_number\n                       FROM prover_jobs\n                                JOIN leaf_aggregation_witness_jobs lawj ON prover_jobs.l1_batch_number = lawj.l1_batch_number\n                       WHERE lawj.status = 'waiting_for_proofs'\n                         AND prover_jobs.status = 'successful'\n                         AND prover_jobs.aggregation_round = 0\n                       GROUP BY prover_jobs.l1_batch_number, lawj.number_of_basic_circuits\n                       HAVING COUNT(*) = lawj.number_of_basic_circuits)\n                RETURNING l1_batch_number;\n            "
  },
  "6ac39e83e446e70a2875624db78a05e56eb35f46e11d0f2fbb2165cda56fbacd": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "data?",
          "ordinal": 1,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address?",
          "ordinal": 2,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT factory_deps.bytecode, transactions.data as \"data?\", transactions.contract_address as \"contract_address?\"\n                    FROM (\n                        SELECT * FROM storage_logs\n                        WHERE storage_logs.hashed_key = $1\n                        ORDER BY miniblock_number DESC, operation_number DESC\n                        LIMIT 1\n                    ) storage_logs\n                    JOIN factory_deps ON factory_deps.bytecode_hash = storage_logs.value\n                    LEFT JOIN transactions ON transactions.hash = storage_logs.tx_hash\n                    WHERE storage_logs.value != $2\n                "
  },
  "6c81c5a55d595d0790ac20ca202ff3083b0677c47872f2eb1c65e568dd7c156a": {
    "describe": {
      "columns": [
        {
          "name": "miniblock_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "log_index_in_miniblock",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "log_index_in_tx",
          "ordinal": 2,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "block_hash",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "shard_id",
          "ordinal": 6,
          "type_info": "Int4"
        },
        {
          "name": "is_service",
          "ordinal": 7,
          "type_info": "Bool"
        },
        {
          "name": "tx_index_in_miniblock",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "tx_index_in_l1_batch",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sender",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "key",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 12,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                            SELECT\n                                miniblock_number, log_index_in_miniblock, log_index_in_tx, tx_hash,\n                                Null::bytea as \"block_hash\", Null::bigint as \"l1_batch_number?\",\n                                shard_id, is_service, tx_index_in_miniblock, tx_index_in_l1_batch, sender, key, value\n                            FROM l2_to_l1_logs\n                            WHERE tx_hash = $1\n                            ORDER BY log_index_in_tx ASC\n                        "
  },
  "6d923b755e1762ebc499cf2c6d7e894357e7b55f3342be08071e2be183ad2a00": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "merkel_tree_paths_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number, merkel_tree_paths_blob_url FROM witness_inputs\n                    WHERE status='successful' AND is_blob_cleaned=FALSE\n                    AND merkel_tree_paths_blob_url is NOT NULL\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                    LIMIT $1;\n                "
  },
  "6de96eb86301418de9a4342cd66447afd6eb42759d36e164e36adddbd42e98e2": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number FROM l1_batches\n                LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id)\n                WHERE execute_tx.confirmed_at IS NOT NULL\n                ORDER BY number DESC LIMIT 1"
  },
  "6ebe0d6a315050d72ffead2dd695f0ba1926a3f4a1ed56b3f291d0f41b72c4d4": {
    "describe": {
      "columns": [
        {
          "name": "hashed_key!",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "value?",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        null,
        null
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT u.hashed_key as \"hashed_key!\",\n                        (SELECT value FROM storage_logs\n                        WHERE hashed_key = u.hashed_key AND miniblock_number < $2\n                        ORDER BY miniblock_number DESC, operation_number DESC LIMIT 1) as \"value?\"\n                    FROM UNNEST($1::bytea[]) AS u(hashed_key)\n                "
  },
  "6f9edffc50202b888d12f80e57a2a346d865e522aa5a02fe3fcfa155406227a4": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Numeric",
          "Numeric"
        ]
      }
    },
    "query": "UPDATE transactions\n                SET in_mempool = TRUE\n                FROM (\n                    SELECT hash\n                    FROM transactions\n                    WHERE miniblock_number IS NULL AND in_mempool = FALSE AND error IS NULL\n                        AND (is_priority = TRUE OR (max_fee_per_gas >= $2 and gas_per_pubdata_limit >= $3))\n                    ORDER BY is_priority DESC, priority_op_id, received_at\n                    LIMIT $1\n                ) as subquery\n                WHERE transactions.hash = subquery.hash\n                RETURNING transactions.*"
  },
  "71df95e25f719ed9bc32622b33c1da0aad14c6ad1a96f25454ce8618470c2ea3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Int8"
        ]
      }
    },
    "query": "INSERT INTO initial_writes (hashed_key, l1_batch_number, created_at, updated_at)\n                SELECT u.hashed_key, $2, now(), now()\n                FROM UNNEST($1::bytea[]) AS u(hashed_key)\n                ON CONFLICT (hashed_key) DO NOTHING\n                "
  },
  "721367902328f9e2e5f8a99820b11d230c60553db366fc76f97c5680470bece8": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "basic_circuits_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "basic_circuits_inputs_blob_url",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number, basic_circuits_blob_url, basic_circuits_inputs_blob_url FROM leaf_aggregation_witness_jobs\n                    WHERE status='successful' AND is_blob_cleaned=FALSE\n                    AND basic_circuits_blob_url is NOT NULL\n                    AND basic_circuits_inputs_blob_url is NOT NULL\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                    LIMIT $1;\n                "
  },
  "7229ddaadb494c5723946a1e917840eb6035b7d0923518aac7ba2fb81c711d7b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int8",
          "Bytea",
          "Int4",
          "Int4",
          "Numeric",
          "Int8",
          "Int8",
          "Int8",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                    INSERT INTO miniblocks (\n                        number, timestamp, hash, l1_tx_count, l2_tx_count,\n                        base_fee_per_gas, l1_gas_price, l2_fair_gas_price, gas_per_pubdata_limit, \n                        bootloader_code_hash, default_aa_code_hash,\n                        created_at, updated_at\n                    )\n                    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, now(), now())\n                "
  },
  "766119f845a7a11b6a5bb2a29bab32e2890df772b13e1a378222e089736fd3bf": {
    "describe": {
      "columns": [
        {
          "name": "number!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COALESCE(max(number), 0) as \"number!\" FROM l1_batches\n                WHERE eth_prove_tx_id IS NOT NULL"
  },
  "769c021b51b9aaafdf27b4019834729047702b17b0684f7271eecd6ffdf96e7c": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs\n                SET status='queued'\n                WHERE l1_batch_number IN\n                      (SELECT prover_jobs.l1_batch_number\n                       FROM prover_jobs\n                                JOIN scheduler_witness_jobs swj ON prover_jobs.l1_batch_number = swj.l1_batch_number\n                       WHERE swj.status = 'waiting_for_proofs'\n                         AND prover_jobs.status = 'successful'\n                         AND prover_jobs.aggregation_round = 2\n                       GROUP BY prover_jobs.l1_batch_number\n                       HAVING COUNT(*) = 1)\n                RETURNING l1_batch_number;\n            "
  },
  "7889294ffe999d3c8b3b093d3add7f9b826e8259451068aeaeca0da0772648e8": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT COUNT(*) as \"count!\"\n                FROM contract_verification_requests\n                WHERE status = 'queued'\n                "
  },
  "7b90e1c16196f0ee29d7278689fe0ac0169093a11b95edf97c729370fadcb73e": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                        SELECT l1_batch_number FROM initial_writes\n                        WHERE hashed_key = $1\n                    "
  },
  "7ca78be8b18638857111cdbc6117ed2c204e3eb22682d5e4553ac4f47efab6e2": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "UPDATE transactions\n                    SET l1_batch_number = NULL, miniblock_number = NULL, error = NULL, index_in_block = NULL, execution_info = '{}'\n                    WHERE miniblock_number > $1\n                    RETURNING hash\n                    "
  },
  "7cf855c4869db43b765b92762402596f6b97b3717735b6d87a16a5776f2eca71": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Numeric",
          "Timestamp"
        ]
      }
    },
    "query": "UPDATE tokens SET usd_price = $2, usd_price_updated_at = $3, updated_at = now() WHERE l1_address = $1"
  },
  "7d3a57126f111ebe51d678b91f64c34b8394df3e7b1d59ca80b6eca01c606da4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Jsonb"
        ]
      }
    },
    "query": "\n                    INSERT INTO contracts_verification_info\n                    (address, verification_info)\n                    VALUES ($1, $2)\n                    ON CONFLICT (address)\n                    DO UPDATE SET verification_info = $2\n                "
  },
  "7d4210089c5abb84befec962fc769b396ff7ad7da212d079bd4460f9ea4d60dc": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number?",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT MIN(l1_batch_number) as \"l1_batch_number?\" FROM (\n                    SELECT MIN(l1_batch_number) as \"l1_batch_number\"\n                    FROM prover_jobs\n                    WHERE status = 'successful' OR aggregation_round < 3\n                    GROUP BY l1_batch_number\n                    HAVING MAX(aggregation_round) < 3\n                ) as inn\n                "
  },
  "7e3623674226e5bb934f7769cdf595138015ad346e12074398fd57dbc03962d3": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 30,
          "type_info": "Int4"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 32,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 35,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 41,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM l1_batches WHERE eth_commit_tx_id IS NOT NULL AND eth_prove_tx_id IS NULL ORDER BY number LIMIT $1"
  },
  "831e1beb42dab1dc4e9b585bb35ce568196e7f46cb655357fdf5437ece519270": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE miniblocks\n                    SET l1_batch_number = $1\n                    WHERE l1_batch_number IS NULL\n                "
  },
  "87e1ae393bf250f834704c940482884c9ed729a24f41d1ec07319fa0cbcc21a7": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM l1_batches WHERE number > $1"
  },
  "88c49ebeb45f7208d223de59ec08a332beac765644e4f29ed855808b8f9cef91": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT id, circuit_input_blob_url FROM prover_jobs\n                    WHERE status='successful' AND is_blob_cleaned=FALSE\n                    AND circuit_input_blob_url is NOT NULL\n                    AND updated_at < NOW() - INTERVAL '30 days'\n                    LIMIT $1;\n                "
  },
  "89b124c78f4f6e86790af8ec391a2c486ce01b33cfb4492a443187b1731cae1e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET eth_prove_tx_id = $1, updated_at = now() WHERE number BETWEEN $2 AND $3"
  },
  "8a5adf70b154ced83daf6bd085203762380afab2363fa65ff5b7f9df22f48616": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT * FROM transactions\n                    WHERE miniblock_number = $1\n                    ORDER BY index_in_block\n                "
  },
  "8b881a834dc813ac5bd4dcd2f973d34ae92cafa929ce933982704d4afe13f972": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 2,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "root_hash?",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "commit_tx_hash?",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "committed_at?",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "prove_tx_hash?",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "proven_at?",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "execute_tx_hash?",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "executed_at?",
          "ordinal": 11,
          "type_info": "Timestamp"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 12,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 13,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 14,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 15,
          "type_info": "Bytea"
        },
        {
          "name": "fee_account_address?",
          "ordinal": 16,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        null,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        true,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT miniblocks.number,\n                        COALESCE(miniblocks.l1_batch_number, (SELECT (max(number) + 1) FROM l1_batches)) as \"l1_batch_number!\",\n                        miniblocks.timestamp,\n                        miniblocks.l1_tx_count,\n                        miniblocks.l2_tx_count,\n                        miniblocks.hash as \"root_hash?\",\n                        commit_tx.tx_hash as \"commit_tx_hash?\",\n                        commit_tx.confirmed_at as \"committed_at?\",\n                        prove_tx.tx_hash as \"prove_tx_hash?\",\n                        prove_tx.confirmed_at as \"proven_at?\",\n                        execute_tx.tx_hash as \"execute_tx_hash?\",\n                        execute_tx.confirmed_at as \"executed_at?\",\n                        miniblocks.l1_gas_price,\n                        miniblocks.l2_fair_gas_price,\n                        miniblocks.bootloader_code_hash,\n                        miniblocks.default_aa_code_hash,\n                        l1_batches.fee_account_address as \"fee_account_address?\"\n                    FROM miniblocks\n                    LEFT JOIN l1_batches ON miniblocks.l1_batch_number = l1_batches.number\n                    LEFT JOIN eth_txs_history as commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id AND commit_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id AND prove_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id AND execute_tx.confirmed_at IS NOT NULL)\n                    WHERE miniblocks.number = $1\n                "
  },
  "8b96fbf5b8adabd76ea2648688c38c4d9917b3736ca53ed3896c35c0da427369": {
    "describe": {
      "columns": [
        {
          "name": "bytecode_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "bytecode",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT bytecode_hash, bytecode FROM factory_deps\n                INNER JOIN miniblocks ON miniblocks.number = factory_deps.miniblock_number\n                WHERE miniblocks.l1_batch_number = $1"
  },
  "8fe01036cac5181aabfdc06095da291c4de6b1e0f82f846c37509bb550ef544e": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l1_address FROM tokens WHERE well_known = false"
  },
  "8fefa3194f469b0f46dc5efcb9e6ccc08159ef6a5681090cb7596877b597bc73": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 30,
          "type_info": "Int4"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 32,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 35,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 41,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT * FROM l1_batches\n                ORDER BY number DESC\n                LIMIT 1"
  },
  "9008367aad7877f269b765c4d0772d0f60689fcde6987c620fe5749a259a8db7": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8",
          "Text",
          "Bytea"
        ]
      }
    },
    "query": "INSERT INTO eth_txs_history\n                (eth_tx_id, base_fee_per_gas, priority_fee_per_gas, tx_hash, signed_raw_tx, created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, now(), now())\n                ON CONFLICT (tx_hash) DO NOTHING\n                RETURNING id"
  },
  "91db60cc4f98ebcaef1435342607da0a86fe16e20a696cb81a569772d5d5ae88": {
    "describe": {
      "columns": [
        {
          "name": "value",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT value\n                FROM storage_logs\n                WHERE storage_logs.hashed_key = $1 AND storage_logs.miniblock_number <= $2\n                ORDER BY storage_logs.miniblock_number DESC, storage_logs.operation_number DESC\n                LIMIT 1\n                "
  },
  "928b5c1fbec2b2cfb9293cfe6312f7a0549f47a7cff4981acc0c2fda81079701": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number FROM l1_batches\n                LEFT JOIN eth_txs_history as prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id)\n                WHERE prove_tx.confirmed_at IS NOT NULL\n                ORDER BY number DESC LIMIT 1"
  },
  "95ce099fde99c57a930ed3d44f74a90d632b831360210ec7fe21b33bed1a4582": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Text",
          "Text",
          "Int8"
        ]
      }
    },
    "query": "INSERT INTO eth_txs (raw_tx, nonce, tx_type, contract_address, predicted_gas_cost, created_at, updated_at)\n               VALUES ($1, $2, $3, $4, $5, now(), now())\n               RETURNING *"
  },
  "95e0e783794ac55ab20b30366f037c313fb0d17e93d3e6ec60667ef1b4da30d5": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET is_blob_cleaned=TRUE\n                WHERE id = ANY($1);\n            "
  },
  "9bf32ea710825c1f0560a7eaa89f8f097ad196755ba82d98a729a2b0d34e1aca": {
    "describe": {
      "columns": [
        {
          "name": "successful_limit!",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "queued_limit!",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "max_block!",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null,
        null,
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT\n                    (SELECT l1_batch_number\n                    FROM prover_jobs\n                    WHERE status NOT IN ('successful', 'skipped')\n                    ORDER BY l1_batch_number\n                    LIMIT 1) as \"successful_limit!\",\n                    \n                    (SELECT l1_batch_number\n                    FROM prover_jobs\n                    WHERE status <> 'queued'\n                    ORDER BY l1_batch_number DESC\n                    LIMIT 1) as \"queued_limit!\",\n\n                    (SELECT MAX(l1_batch_number) as \"max!\" FROM prover_jobs) as \"max_block!\"\n                "
  },
  "9d2faf0b6f8582f0a2607ddd6e216cccfbea7ff5e99646e3a35420c4d190c5f8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs\n                SET merkle_tree_paths=''\n                WHERE l1_batch_number = ANY($1);\n            "
  },
  "a2758f1cfaac42019e4b11a7fe21d62da2a83b98d997448658ab2855383d6ca4": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 30,
          "type_info": "Int4"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 32,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 33,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 35,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 36,
          "type_info": "Int8"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 41,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Float8",
          "Int8"
        ]
      }
    },
    "query": "SELECT l1_batches.* FROM l1_batches JOIN eth_txs ON (l1_batches.eth_commit_tx_id = eth_txs.id) JOIN eth_txs_history as commit_tx ON (eth_txs.confirmed_eth_tx_history_id = commit_tx.id) WHERE commit_tx.confirmed_at IS NOT NULL AND eth_prove_tx_id IS NOT NULL AND eth_execute_tx_id IS NULL AND EXTRACT(epoch from commit_tx.confirmed_at) < $1 ORDER BY number LIMIT $2"
  },
  "a39f760d2cd879a78112e57d8611d7099802b03b7cc4933cafb4c47e133ad543": {
    "describe": {
      "columns": [
        {
          "name": "address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "topic1",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic2",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "topic3",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "topic4",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "value",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "block_hash",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "l1_batch_number?",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "miniblock_number",
          "ordinal": 8,
          "type_info": "Int8"
        },
        {
          "name": "tx_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "tx_index_in_block",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_block",
          "ordinal": 11,
          "type_info": "Int4"
        },
        {
          "name": "event_index_in_tx",
          "ordinal": 12,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        null,
        null,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                        SELECT\n                            address, topic1, topic2, topic3, topic4, value,\n                            Null::bytea as \"block_hash\", Null::bigint as \"l1_batch_number?\",\n                            miniblock_number, tx_hash, tx_index_in_block,\n                            event_index_in_block, event_index_in_tx\n                        FROM events\n                        WHERE tx_hash = $1\n                        ORDER BY miniblock_number ASC, event_index_in_block ASC\n                        "
  },
  "a3d526a5a341618e9784fc81626143a3174709483a527879254ff8e28f210ac3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int4",
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "UPDATE l1_batches SET eth_execute_tx_id = $1, updated_at = now() WHERE number BETWEEN $2 AND $3"
  },
  "a3d6cbf1f4386b65338db27467087eb77479f739dc9e9e2ac004c5c0350aa99e": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT number, hash FROM miniblocks\n                WHERE number > $1\n                ORDER BY number ASC\n                LIMIT $2\n            "
  },
  "a482c481a9ffaad4735775282cf6e8d68f284884e7c6f043e9737a0d236f2e97": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "topic2!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic3!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT tx_hash, topic2 as \"topic2!\", topic3 as \"topic3!\", value as \"value!\",\n                    tokens.l1_address as \"l1_address!\", tokens.l2_address as \"l2_address!\",\n                    tokens.symbol as \"symbol!\", tokens.name as \"name!\", tokens.decimals as \"decimals!\", tokens.usd_price as \"usd_price?\"\n                FROM events\n                INNER JOIN tokens ON tokens.l2_address = '\\x0000000000000000000000000000000000000000'\n                WHERE tx_hash = ANY($1) AND events.topic1 = $2 AND events.address = $3\n                ORDER BY tx_hash, miniblock_number ASC, event_index_in_block ASC\n                "
  },
  "a4eef598864b0d59bd663eb16bff3a23bcb7ac37bb6a2e702d6415b8dd99cd9f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Int4",
          "Int8",
          "Bool",
          "Bytea",
          "ByteaArray",
          "ByteaArray",
          "Bytea",
          "ByteaArray",
          "Int8",
          "Int8",
          "Int8",
          "Jsonb",
          "Jsonb",
          "Numeric",
          "Int8",
          "Int8",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "INSERT INTO l1_batches (number, l1_tx_count, l2_tx_count,\n            timestamp, is_finished, fee_account_address, l2_to_l1_logs, l2_to_l1_messages, bloom, priority_ops_onchain_data,\n            predicted_commit_gas_cost, predicted_prove_gas_cost, predicted_execute_gas_cost,\n            initial_bootloader_heap_content, used_contract_hashes, base_fee_per_gas, l1_gas_price, l2_fair_gas_price,\n            bootloader_code_hash, default_aa_code_hash,\n                created_at, updated_at)\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, now(), now())\n            "
  },
  "a7d575d90f9bf19427ddbe342d296effb7c38bc90f213aa1cc94523930dd8f15": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l1_sender!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic2!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT events.tx_hash, transactions.initiator_address as \"l1_sender!\", events.topic2 as \"topic2!\", events.value as \"value!\",\n                    tokens.l1_address as \"l1_address!\", tokens.l2_address as \"l2_address!\",\n                    tokens.symbol as \"symbol!\", tokens.name as \"name!\", tokens.decimals as \"decimals!\", tokens.usd_price as \"usd_price?\"\n                FROM events\n                INNER JOIN tokens ON tokens.l2_address = '\\x0000000000000000000000000000000000000000'\n                INNER JOIN transactions ON transactions.hash = events.tx_hash\n                WHERE tx_hash = ANY($1) AND events.topic1 = $2 AND events.address = $3\n                ORDER BY tx_hash, events.miniblock_number ASC, event_index_in_block ASC\n                "
  },
  "a8d2b80d197d8168a6c1b4666e799a9d6c2e31d84986ae352715e687989f913c": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "contract_address",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "source_code",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "contract_name",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "compiler_zksolc_version",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "optimization_used",
          "ordinal": 5,
          "type_info": "Bool"
        },
        {
          "name": "constructor_arguments",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        },
        {
          "name": "compilation_errors",
          "ordinal": 11,
          "type_info": "Jsonb"
        },
        {
          "name": "processing_started_at",
          "ordinal": 12,
          "type_info": "Timestamp"
        },
        {
          "name": "compiler_solc_version",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "panic_message",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_system",
          "ordinal": 16,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Interval"
        ]
      }
    },
    "query": "UPDATE contract_verification_requests\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE id = (\n                    SELECT id FROM contract_verification_requests\n                    WHERE status = 'queued' OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                    ORDER BY created_at\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING contract_verification_requests.*"
  },
  "a9b7a880dbde4f7de5a6c2ff4009281527f2d01a547228981af3af2129ffb3f7": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Numeric",
          "Interval",
          "Interval"
        ]
      }
    },
    "query": "\n                SELECT COUNT(*) as \"count!\" FROM tokens\n                WHERE l2_address = $1 AND\n                    market_volume > $2 AND now() - market_volume_updated_at < $3 AND\n                    usd_price > 0 AND now() - usd_price_updated_at < $4\n                "
  },
  "a9d96d6774af2637173d471f02995652cd4c131c05fdcb3d0e1644bcd1aa1809": {
    "describe": {
      "columns": [
        {
          "name": "proof",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "aggregation_result_coords",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT prover_jobs.result as proof, scheduler_witness_jobs.aggregation_result_coords\n                FROM prover_jobs\n                INNER JOIN scheduler_witness_jobs\n                ON prover_jobs.l1_batch_number = scheduler_witness_jobs.l1_batch_number\n                WHERE prover_jobs.l1_batch_number >= $1 AND prover_jobs.l1_batch_number <= $2\n                AND prover_jobs.aggregation_round = 3\n                AND prover_jobs.status = 'successful'\n                "
  },
  "aa1534f03679fd2d1d9e7c1da1f94cc0e2ec5fc3a0e1ac7137147533eacf0aaf": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT * FROM eth_txs \n                   WHERE id > (SELECT COALESCE(MAX(eth_tx_id), 0) FROM eth_txs_history)\n                   ORDER BY id\n                   LIMIT $1\n                   "
  },
  "ad11ec3e628ae6c64ac160d8dd689b2f64033f620e17a31469788b3ce4968ad3": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "confirmed_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sent_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM eth_txs_history WHERE eth_tx_id = $1 ORDER BY created_at DESC LIMIT 1"
  },
  "ad4f74aa6f131df0243f4fa500ade1b98aa335bd71ed417b02361e2c697e60f8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE scheduler_witness_jobs\n                        SET aggregation_result_coords = $1,\n                            updated_at = now()\n                    WHERE l1_batch_number = $2\n                    "
  },
  "adc9ad2c944f9dacc28b5bd133aa37d9e8ea99eca1c5dfbeef37cda4b793f434": {
    "describe": {
      "columns": [
        {
          "name": "market_volume",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "market_volume_updated_at",
          "ordinal": 1,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT market_volume, market_volume_updated_at FROM tokens WHERE l2_address = $1"
  },
  "ae072f51b65d0b5212264be9a34027922e5aedef7e4741517ad8104bf5aa79e9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM factory_deps WHERE miniblock_number > $1"
  },
  "af75db6b7e42b73ce62b28a7281e1bfa181ee0c80a85d7d8078831db5dcdb699": {
    "describe": {
      "columns": [
        {
          "name": "l1_block_number",
          "ordinal": 0,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l1_block_number FROM transactions\n                WHERE priority_op_id IS NOT NULL\n                ORDER BY priority_op_id DESC\n                LIMIT 1"
  },
  "b1478907214ad20dddd4f3846fba4b0ddf1fff63ddb3b95c8999635e77c8b863": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "confirmed_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "sent_at",
          "ordinal": 10,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM eth_txs_history WHERE eth_tx_id = $1 ORDER BY created_at DESC"
  },
  "b4c576db7c762103dc6700ded458e996d2e9ef670d7b58b181dbfab02fa426ce": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Numeric",
          "Numeric",
          "Numeric",
          "Jsonb",
          "Int8",
          "Numeric",
          "Numeric",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Bytea",
          "Int4",
          "Numeric",
          "Bytea",
          "Timestamp"
        ]
      }
    },
    "query": "\n                INSERT INTO transactions\n                (\n                    hash,\n                    is_priority,\n                    initiator_address,\n\n                    gas_limit,\n                    max_fee_per_gas,\n                    gas_per_pubdata_limit,\n\n                    data,\n                    priority_op_id,\n                    full_fee,\n                    layer_2_tip_fee,\n                    contract_address,\n                    l1_block_number,\n                    value,\n\n                    paymaster,\n                    paymaster_input,\n                    tx_format,\n\n                    l1_tx_mint,\n                    l1_tx_refund_recipient,\n\n                    received_at,\n                    created_at,\n                    updated_at\n                )\n                VALUES\n                    (\n                        $1, TRUE, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12,\n                        $13, $14, $15, $16, $17, $18, now(), now()\n                    )\n                ON CONFLICT (hash) DO NOTHING\n                "
  },
  "b4cd15d430b423cd5bad80199abf0f67c698ca469e55557f20d5c7460ed40b0d": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Int4",
          "Bytea",
          "Int4",
          "Text"
        ]
      }
    },
    "query": "\n                    INSERT INTO prover_jobs (l1_batch_number, circuit_type, sequence_number, prover_input, aggregation_round, circuit_input_blob_url, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, $4, $5, $6, 'queued', now(), now())\n                    ON CONFLICT(l1_batch_number, aggregation_round, sequence_number) DO NOTHING\n                    "
  },
  "b4da918ee3b36b56d95c8834edebe65eb48ebb8270fa1e6ccf73ad354fd71134": {
    "describe": {
      "columns": [
        {
          "name": "l1_address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT l1_address, l2_address FROM tokens WHERE well_known = true"
  },
  "b6c8e0827b2389a14433c031332962495311562ae9652ae7e9409a4bf48dc55b": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT * FROM eth_txs WHERE confirmed_eth_tx_history_id IS NULL \n                 AND id <= (SELECT COALESCE(MAX(eth_tx_id), 0) FROM eth_txs_history WHERE sent_at_block IS NOT NULL)\n                 ORDER BY id"
  },
  "bb3ae24e27a04047af2d6ebc145e86619d29ec89bb2abe39244f5669e82c9571": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE l1_batches\n                    SET hash = $1\n                    WHERE number = $2\n                "
  },
  "bd4898ee283a312cb995853686a1f5252e73b22efea3cf9f158c4476c9639b32": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "INSERT INTO storage (hashed_key, address, key, value, tx_hash, created_at, updated_at)\n                SELECT u.hashed_key, u.address, u.key, u.value, u.tx_hash, now(), now()\n                    FROM UNNEST ($1::bytea[], $2::bytea[], $3::bytea[], $4::bytea[], $5::bytea[])\n                    AS u(hashed_key, address, key, value, tx_hash)\n                ON CONFLICT (hashed_key)\n                DO UPDATE SET tx_hash = excluded.tx_hash, value = excluded.value, updated_at = now()\n                "
  },
  "bef58e581dd0b658350dcdc15ebf7cf350cf088b60c916a15889e31ee7534907": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "bytecode_hash",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "SELECT bytecode, bytecode_hash FROM factory_deps WHERE bytecode_hash = ANY($1)"
  },
  "c0532f9e7a6130426acb032f391f6dae7ff22914f0045673c42c1ee84ca36490": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT COUNT(*) as \"count!\"\n                    FROM (\n                        SELECT * FROM storage_logs\n                        WHERE storage_logs.hashed_key = $1\n                        ORDER BY storage_logs.miniblock_number DESC, storage_logs.operation_number DESC\n                        LIMIT 1\n                    ) sl\n                    WHERE sl.value != $2\n                "
  },
  "c1ed4c80984db514dd264a9bc19bdaee29b6f5c291a9d503d9896c41b316cca5": {
    "describe": {
      "columns": [
        {
          "name": "nonce!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT nonce as \"nonce!\" FROM transactions\n                    WHERE initiator_address = $1 AND nonce >= $2\n                        AND is_priority = FALSE\n                        AND (miniblock_number IS NOT NULL OR error IS NULL)\n                    ORDER BY nonce\n                "
  },
  "c2cf96a9eb6893c5ba7d9e5418d9f24084ccd87980cb6ee05de1b3bde5c654bd": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray",
          "ByteaArray"
        ]
      }
    },
    "query": "\n                        INSERT INTO call_traces (tx_hash, call_trace)\n                        SELECT u.tx_hash, u.call_trace\n                        FROM UNNEST($1::bytea[], $2::bytea[])\n                        AS u(tx_hash, call_trace)\n                        "
  },
  "c2f6f7fa37b303748f47ff2de01227e7afbc9ff041bc1428743d91300f5f5caf": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number FROM miniblocks\n                    WHERE number = $1\n                "
  },
  "c321d1210799dfd29e54f18f3a3698e9bf288850f2dbd782e817d1cfd9165b16": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "circuit_type",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prover_input",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "error",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 9,
          "type_info": "Time"
        },
        {
          "name": "aggregation_round",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "result",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "sequence_number",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "attempts",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "circuit_input_blob_url",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "proccesed_by",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 16,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE id = (\n                    SELECT id\n                    FROM prover_jobs\n                    WHERE circuit_type = ANY($1)\n                    AND status = 'queued'\n                    ORDER BY aggregation_round DESC, l1_batch_number ASC, id ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING prover_jobs.*\n                "
  },
  "c6109267f85f38edcd53f361cf2654f43fa45928e39324cfab8389453b4e7031": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        },
        {
          "name": "tx_hash",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 3,
          "type_info": "Int8"
        },
        {
          "name": "priority_fee_per_gas",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "signed_raw_tx",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 6,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                SELECT \n                    eth_txs_history.id,\n                    eth_txs_history.eth_tx_id,\n                    eth_txs_history.tx_hash,\n                    eth_txs_history.base_fee_per_gas,\n                    eth_txs_history.priority_fee_per_gas,\n                    eth_txs_history.signed_raw_tx,\n                    eth_txs.nonce\n                FROM eth_txs_history \n                JOIN eth_txs ON eth_txs.id = eth_txs_history.eth_tx_id \n                WHERE eth_txs_history.sent_at_block IS NULL AND eth_txs.confirmed_eth_tx_history_id IS NULL\n                ORDER BY eth_txs_history.id DESC"
  },
  "c66b0e0867a1a634f984645ca576a6502b51b67aa0be2dae98e0e2adeb450963": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "status",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "attempts",
          "ordinal": 2,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4"
        ]
      }
    },
    "query": "\n                UPDATE prover_jobs\n                SET status = 'queued', attempts = attempts + 1, updated_at = now(), processing_started_at = now()\n                WHERE (status = 'in_progress' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'in_gpu_proof' AND  processing_started_at <= now() - $1::interval AND attempts < $2)\n                OR (status = 'failed' AND attempts < $2)\n                RETURNING id, status, attempts\n                "
  },
  "c6aadc4ec78e30f5775f7a9f866ad02984b78de3e3d1f34c144a4057ff44ea6a": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(*) FROM eth_txs WHERE has_failed = TRUE"
  },
  "c766f2ee9e3054ba337873ba5ebb26d4f1a43691664372152e5eb782391f9f68": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array"
        ]
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs\n                SET is_blob_cleaned=TRUE\n                WHERE l1_batch_number = ANY($1);\n            "
  },
  "c8125b30eb64eebfa4500dc623972bf8771a83b218bd18a51e633d4cf4bf8eb3": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT bytecode FROM (\n                        SELECT * FROM storage_logs\n                        WHERE\n                            storage_logs.hashed_key = $1 AND\n                            storage_logs.miniblock_number <= $2\n                        ORDER BY\n                            storage_logs.miniblock_number DESC, storage_logs.operation_number DESC\n                        LIMIT 1\n                    ) t\n                    JOIN factory_deps ON value = factory_deps.bytecode_hash\n                    WHERE value != $3\n                "
  },
  "c81a1ff168b3a1e94489fb66995b0978c4c6aac92a731144cc22fcc1f4369ba9": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "merkle_tree_paths",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "created_at",
          "ordinal": 2,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 3,
          "type_info": "Timestamp"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "time_taken",
          "ordinal": 5,
          "type_info": "Time"
        },
        {
          "name": "processing_started_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "error",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "attempts",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "merkel_tree_paths_blob_url",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 10,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        true,
        false,
        false,
        false,
        false,
        true,
        true,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE witness_inputs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE l1_batch_number = (\n                    SELECT l1_batch_number\n                    FROM witness_inputs\n                    WHERE l1_batch_number <= $3\n                    AND\n                    (   status = 'queued'\n                        OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                        OR (status = 'failed' AND attempts < $2)\n                    )\n                    ORDER BY l1_batch_number ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING witness_inputs.*\n               "
  },
  "c849561f88c775f2cce4d59387916793ba1623a8a714b415375477e090d86bd3": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Int4",
          "Int4"
        ]
      }
    },
    "query": "UPDATE eth_txs\n                SET gas_used = $1, confirmed_eth_tx_history_id = $2\n                WHERE id = $3"
  },
  "c891770305cb3aba4021738e60567d977eac54435c871b5178de7c3c96d2f721": {
    "describe": {
      "columns": [
        {
          "name": "usd_price",
          "ordinal": 0,
          "type_info": "Numeric"
        },
        {
          "name": "usd_price_updated_at",
          "ordinal": 1,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT usd_price, usd_price_updated_at FROM tokens WHERE l2_address = $1"
  },
  "c9eefe59225b10d90b67ab92a8f9e3bad92ec02f8dfc2719903149ab9f82fe1c": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "is_priority",
          "ordinal": 1,
          "type_info": "Bool"
        },
        {
          "name": "full_fee",
          "ordinal": 2,
          "type_info": "Numeric"
        },
        {
          "name": "layer_2_tip_fee",
          "ordinal": 3,
          "type_info": "Numeric"
        },
        {
          "name": "initiator_address",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "nonce",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "signature",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "input",
          "ordinal": 7,
          "type_info": "Bytea"
        },
        {
          "name": "data",
          "ordinal": 8,
          "type_info": "Jsonb"
        },
        {
          "name": "received_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "priority_op_id",
          "ordinal": 10,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_number",
          "ordinal": 11,
          "type_info": "Int8"
        },
        {
          "name": "index_in_block",
          "ordinal": 12,
          "type_info": "Int4"
        },
        {
          "name": "error",
          "ordinal": 13,
          "type_info": "Varchar"
        },
        {
          "name": "gas_limit",
          "ordinal": 14,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_storage_limit",
          "ordinal": 15,
          "type_info": "Numeric"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 16,
          "type_info": "Numeric"
        },
        {
          "name": "tx_format",
          "ordinal": 17,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 18,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 19,
          "type_info": "Timestamp"
        },
        {
          "name": "execution_info",
          "ordinal": 20,
          "type_info": "Jsonb"
        },
        {
          "name": "contract_address",
          "ordinal": 21,
          "type_info": "Bytea"
        },
        {
          "name": "in_mempool",
          "ordinal": 22,
          "type_info": "Bool"
        },
        {
          "name": "l1_block_number",
          "ordinal": 23,
          "type_info": "Int4"
        },
        {
          "name": "value",
          "ordinal": 24,
          "type_info": "Numeric"
        },
        {
          "name": "paymaster",
          "ordinal": 25,
          "type_info": "Bytea"
        },
        {
          "name": "paymaster_input",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "max_fee_per_gas",
          "ordinal": 27,
          "type_info": "Numeric"
        },
        {
          "name": "max_priority_fee_per_gas",
          "ordinal": 28,
          "type_info": "Numeric"
        },
        {
          "name": "effective_gas_price",
          "ordinal": 29,
          "type_info": "Numeric"
        },
        {
          "name": "miniblock_number",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 31,
          "type_info": "Int4"
        },
        {
          "name": "refunded_gas",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "l1_tx_mint",
          "ordinal": 33,
          "type_info": "Numeric"
        },
        {
          "name": "l1_tx_refund_recipient",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "miniblock_timestamp?",
          "ordinal": 35,
          "type_info": "Int8"
        },
        {
          "name": "block_hash?",
          "ordinal": 36,
          "type_info": "Bytea"
        },
        {
          "name": "eth_commit_tx_hash?",
          "ordinal": 37,
          "type_info": "Text"
        },
        {
          "name": "eth_prove_tx_hash?",
          "ordinal": 38,
          "type_info": "Text"
        },
        {
          "name": "eth_execute_tx_hash?",
          "ordinal": 39,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        false,
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT transactions.*,\n                        miniblocks.timestamp as \"miniblock_timestamp?\",\n                        miniblocks.hash as \"block_hash?\",\n                        commit_tx.tx_hash as \"eth_commit_tx_hash?\",\n                        prove_tx.tx_hash as \"eth_prove_tx_hash?\",\n                        execute_tx.tx_hash as \"eth_execute_tx_hash?\"\n                    FROM transactions\n                    LEFT JOIN miniblocks ON miniblocks.number = transactions.miniblock_number\n                    LEFT JOIN l1_batches ON l1_batches.number = miniblocks.l1_batch_number\n                    LEFT JOIN eth_txs_history as commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id AND commit_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as prove_tx ON (l1_batches.eth_prove_tx_id = prove_tx.eth_tx_id AND prove_tx.confirmed_at IS NOT NULL)\n                    LEFT JOIN eth_txs_history as execute_tx ON (l1_batches.eth_execute_tx_id = execute_tx.eth_tx_id AND execute_tx.confirmed_at IS NOT NULL)\n                    WHERE transactions.hash = $1\n                "
  },
  "ca3a65591d2d14e6b597389ee47594f403b5212d79267279c957cbc64d44dc7a": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT number FROM l1_batches\n                LEFT JOIN eth_txs_history as commit_tx ON (l1_batches.eth_commit_tx_id = commit_tx.eth_tx_id)\n                WHERE commit_tx.confirmed_at IS NOT NULL\n                ORDER BY number DESC LIMIT 1"
  },
  "ca8fa3521dab5ee985a837572e8625bd5b26bf79f58950698218b28110c29d1f": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Int4",
          "Int2",
          "Text",
          "Text",
          "Int2"
        ]
      }
    },
    "query": "\n                    INSERT INTO gpu_prover_queue (instance_host, instance_port, queue_capacity, queue_free_slots, instance_status, specialized_prover_group_id, region, zone, num_gpu, created_at, updated_at)\n                    VALUES (cast($1::text as inet), $2, $3, $3, 'available', $4, $5, $6, $7, now(), now())\n                    ON CONFLICT(instance_host, instance_port, region, zone)\n                    DO UPDATE SET instance_status='available', queue_capacity=$3, queue_free_slots=$3, specialized_prover_group_id=$4, region=$5, zone=$6, num_gpu=$7, updated_at=now()"
  },
  "cbe9445b28efc540d4a01b4c8f1e62017e9854b2d01973c55b27603a8a81bbdd": {
    "describe": {
      "columns": [
        {
          "name": "value",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8"
        ]
      }
    },
    "query": "select value from storage_logs where hashed_key = $1 and miniblock_number <= $2 order by miniblock_number desc, operation_number desc limit 1"
  },
  "ce12a389d218de2071752e8f67b9ad3132777c8a8737009be283e1bedef6dad5": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "is_finished",
          "ordinal": 2,
          "type_info": "Bool"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "fee_account_address",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "bloom",
          "ordinal": 6,
          "type_info": "Bytea"
        },
        {
          "name": "priority_ops_onchain_data",
          "ordinal": 7,
          "type_info": "ByteaArray"
        },
        {
          "name": "hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "parent_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        },
        {
          "name": "commitment",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_write_logs",
          "ordinal": 11,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_contracts",
          "ordinal": 12,
          "type_info": "Bytea"
        },
        {
          "name": "eth_prove_tx_id",
          "ordinal": 13,
          "type_info": "Int4"
        },
        {
          "name": "eth_commit_tx_id",
          "ordinal": 14,
          "type_info": "Int4"
        },
        {
          "name": "eth_execute_tx_id",
          "ordinal": 15,
          "type_info": "Int4"
        },
        {
          "name": "created_at",
          "ordinal": 16,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 17,
          "type_info": "Timestamp"
        },
        {
          "name": "merkle_root_hash",
          "ordinal": 18,
          "type_info": "Bytea"
        },
        {
          "name": "l2_to_l1_logs",
          "ordinal": 19,
          "type_info": "ByteaArray"
        },
        {
          "name": "l2_to_l1_messages",
          "ordinal": 20,
          "type_info": "ByteaArray"
        },
        {
          "name": "predicted_commit_gas_cost",
          "ordinal": 21,
          "type_info": "Int8"
        },
        {
          "name": "predicted_prove_gas_cost",
          "ordinal": 22,
          "type_info": "Int8"
        },
        {
          "name": "predicted_execute_gas_cost",
          "ordinal": 23,
          "type_info": "Int8"
        },
        {
          "name": "initial_bootloader_heap_content",
          "ordinal": 24,
          "type_info": "Jsonb"
        },
        {
          "name": "used_contract_hashes",
          "ordinal": 25,
          "type_info": "Jsonb"
        },
        {
          "name": "compressed_initial_writes",
          "ordinal": 26,
          "type_info": "Bytea"
        },
        {
          "name": "compressed_repeated_writes",
          "ordinal": 27,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_compressed_messages",
          "ordinal": 28,
          "type_info": "Bytea"
        },
        {
          "name": "l2_l1_merkle_root",
          "ordinal": 29,
          "type_info": "Bytea"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 30,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 31,
          "type_info": "Int8"
        },
        {
          "name": "rollup_last_leaf_index",
          "ordinal": 32,
          "type_info": "Int8"
        },
        {
          "name": "zkporter_is_available",
          "ordinal": 33,
          "type_info": "Bool"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 34,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 35,
          "type_info": "Bytea"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 36,
          "type_info": "Numeric"
        },
        {
          "name": "aux_data_hash",
          "ordinal": 37,
          "type_info": "Bytea"
        },
        {
          "name": "pass_through_data_hash",
          "ordinal": 38,
          "type_info": "Bytea"
        },
        {
          "name": "meta_parameters_hash",
          "ordinal": 39,
          "type_info": "Bytea"
        },
        {
          "name": "skip_proof",
          "ordinal": 40,
          "type_info": "Bool"
        },
        {
          "name": "gas_per_pubdata_byte_in_block",
          "ordinal": 41,
          "type_info": "Int4"
        },
        {
          "name": "gas_per_pubdata_limit",
          "ordinal": 42,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        false,
        true,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT number, timestamp, is_finished, l1_tx_count, l2_tx_count, fee_account_address, bloom, priority_ops_onchain_data, hash, parent_hash, commitment, compressed_write_logs, compressed_contracts, eth_prove_tx_id, eth_commit_tx_id, eth_execute_tx_id, created_at, updated_at, merkle_root_hash, l2_to_l1_logs, l2_to_l1_messages, predicted_commit_gas_cost, predicted_prove_gas_cost, predicted_execute_gas_cost, initial_bootloader_heap_content, used_contract_hashes, compressed_initial_writes, compressed_repeated_writes, l2_l1_compressed_messages, l2_l1_merkle_root, l1_gas_price, l2_fair_gas_price, rollup_last_leaf_index, zkporter_is_available, bootloader_code_hash, default_aa_code_hash, base_fee_per_gas, aux_data_hash, pass_through_data_hash, meta_parameters_hash, skip_proof, gas_per_pubdata_byte_in_block, gas_per_pubdata_limit\n                FROM\n                (SELECT l1_batches.*, row_number() over (order by number ASC) as row_number\n                    FROM l1_batches\n                    WHERE eth_commit_tx_id IS NOT NULL\n                      AND l1_batches.skip_proof = TRUE\n                      AND l1_batches.number > $1\n                    ORDER BY number LIMIT $2) inn\n                WHERE number - row_number = $1\n                "
  },
  "ce3666b149f7fc62a68139a8efb83ed149c7deace17b8968817941763e45a147": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Int8",
          "Bytea"
        ]
      }
    },
    "query": "\n                    DELETE FROM tokens \n                    WHERE l2_address IN\n                    (\n                        SELECT substring(key, 12, 20) FROM storage_logs \n                        WHERE storage_logs.address = $1 AND miniblock_number > $2 AND NOT EXISTS (\n                            SELECT 1 FROM storage_logs as s\n                            WHERE\n                                s.hashed_key = storage_logs.hashed_key AND\n                                (s.miniblock_number, s.operation_number) >= (storage_logs.miniblock_number, storage_logs.operation_number) AND\n                                s.value = $3\n                        )\n                    )\n                "
  },
  "cea77fbe02853a7a9b1f7b5ddf2957cb23212ae5ef0f889834d796c35b583542": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "DELETE FROM miniblocks WHERE number > $1"
  },
  "cf9a49dd3ef67b3515e411fd0daadd667af9a4451390b3ef47fe9f902ee9f4e2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Text",
          "Jsonb",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE contract_verification_requests\n                SET status = 'failed', updated_at = now(), error = $2, compilation_errors = $3, panic_message = $4\n                WHERE id = $1\n                "
  },
  "d0571a05a9f65e71b3ab478dc7217c3644024ed0d6ae6616c331a7737759c86c": {
    "describe": {
      "columns": [
        {
          "name": "merkle_root_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT merkle_root_hash FROM l1_batches WHERE number = $1"
  },
  "d0770d2d0cc0cec5cf5c2e90912b697f19adbdf5cb6e734c3bddd06ad96e83e9": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "TextArray"
        ]
      }
    },
    "query": "\n                    INSERT INTO contract_verification_solc_versions (version, created_at, updated_at)\n                    SELECT u.version, now(), now()\n                        FROM UNNEST($1::text[])\n                    AS u(version)\n                "
  },
  "d0ff67e7c59684a0e4409726544cf850dbdbb36d038ebbc6a1c5bf0e76b0358c": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM l1_batches"
  },
  "d11ff84327058721c3c36bc3371c3139f41e2a2255f64bbc5108c1876848d8bb": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Int4",
          "Int4",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET instance_status = $1, updated_at = now(), queue_free_slots = $4\n                WHERE instance_host = $2::text::inet\n                AND instance_port = $3\n                AND region = $5\n                AND zone = $6\n                "
  },
  "d2f16dcd8175a337f57724ce5b2fb59d2934f60bb2d24c6ec77195dc63c26002": {
    "describe": {
      "columns": [
        {
          "name": "hash!",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 6,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT hash as \"hash!\",\n                    tokens.l1_address as \"l1_address!\", tokens.l2_address as \"l2_address!\",\n                    tokens.symbol as \"symbol!\", tokens.name as \"name!\", tokens.decimals as \"decimals!\", tokens.usd_price as \"usd_price?\"\n                FROM transactions\n                INNER JOIN tokens\n                    ON tokens.l2_address = transactions.contract_address OR (transactions.contract_address = $2 AND tokens.l2_address = $3)\n                WHERE hash = ANY($1)\n                "
  },
  "d6654b10ce779826e565bddf67c9a1aca2767f11e858eb9aaedff4b0ea277a34": {
    "describe": {
      "columns": [
        {
          "name": "tx_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "topic2!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "topic3!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "value!",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 4,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 5,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 6,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 7,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 8,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 9,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                SELECT tx_hash, topic2 as \"topic2!\", topic3 as \"topic3!\", value as \"value!\",\n                    tokens.l1_address as \"l1_address!\", tokens.l2_address as \"l2_address!\",\n                    tokens.symbol as \"symbol!\", tokens.name as \"name!\", tokens.decimals as \"decimals!\", tokens.usd_price as \"usd_price?\"\n                FROM events\n                INNER JOIN tokens ON\n                    tokens.l2_address = events.address OR (events.address = $3 AND tokens.l2_address = $4)\n                WHERE tx_hash = ANY($1) AND topic1 = $2\n                ORDER BY tx_hash, miniblock_number ASC, event_index_in_block ASC\n                "
  },
  "d6709f3ce8f08f988e10a0e0fb5c06db9488834a85066babaf3d56cf212b4ea0": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Bytea",
          "Varchar",
          "Varchar",
          "Int4"
        ]
      }
    },
    "query": "UPDATE tokens SET token_list_name = $2, token_list_symbol = $3,\n                token_list_decimals = $4, well_known = true, updated_at = now()\n                WHERE l1_address = $1\n                "
  },
  "d8515595d34dca53e50bbd4ed396f6208e33f596195a5ed02fba9e8364ceb33c": {
    "describe": {
      "columns": [
        {
          "name": "bytecode",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT bytecode FROM factory_deps WHERE bytecode_hash = $1"
  },
  "d9b5fe50f1669cd648badb6d1ffe3dfa4fd263d9e3f946550bc8551815627ba5": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number FROM witness_inputs\n                    WHERE length(merkle_tree_paths) <> 0\n                    ORDER BY l1_batch_number DESC\n                    LIMIT $1;\n                "
  },
  "dbf9a2be8cdd0a8ad95f049134d33ae0c4ed4204e4d8f6e5f3244bea4830f67e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    UPDATE l1_batches\n                    SET skip_proof = TRUE WHERE number = $1\n                "
  },
  "dbfb1709a68fccf341320f7cf1b757378ec462d63d17672f82a8d9f95797136d": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "received_at",
          "ordinal": 1,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Timestamp",
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT transactions.hash, transactions.received_at\n                FROM transactions\n                LEFT JOIN miniblocks ON miniblocks.number = miniblock_number\n                WHERE received_at > $1\n                ORDER BY received_at ASC\n                LIMIT $2\n                "
  },
  "dc16d0fac093a52480b66dfcb5976fb01e6629e8c982c265f2af1d5000090572": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(miniblocks.number) FROM miniblocks WHERE l1_batch_number IS NULL"
  },
  "dd10ebfbf5db4d2ac44b03be3acf494ea180f59685d8fc156af481e8265079c2": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "number",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 2,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                SELECT\n                    hash,\n                    number,\n                    timestamp\n                FROM miniblocks\n                WHERE number > $1\n                ORDER BY number ASC\n            "
  },
  "dd8aa1c9d4dcea22c9a13cca5ae45e951cf963b0608046b88be40309d7379ec2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Varchar",
          "Bytea"
        ]
      }
    },
    "query": "UPDATE transactions\n                    SET error = $1, updated_at = now()\n                    WHERE hash = $2"
  },
  "ddb3b38be2b6038b63288961f46ba7d3bb7250caff1146e13c5ee77b6a994ffc": {
    "describe": {
      "columns": [
        {
          "name": "circuit_type",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "result",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int4"
        ]
      }
    },
    "query": "\n                        SELECT circuit_type, result from prover_jobs\n                        WHERE l1_batch_number = $1 AND status = 'successful' AND aggregation_round = $2\n                        ORDER BY sequence_number ASC;\n                        "
  },
  "e14338281eb639856f1c7a8ba6b60fe3914d3f30d0b55cea8fb287209892df03": {
    "describe": {
      "columns": [
        {
          "name": "key_address",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "bytecode",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "creator_address?",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "creator_tx_hash?",
          "ordinal": 3,
          "type_info": "Bytea"
        },
        {
          "name": "created_in_block_number",
          "ordinal": 4,
          "type_info": "Int8"
        },
        {
          "name": "verification_info",
          "ordinal": 5,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                    WITH sl AS (\n                        SELECT * FROM storage_logs\n                        WHERE storage_logs.hashed_key = $1\n                        ORDER BY storage_logs.miniblock_number DESC, storage_logs.operation_number DESC\n                        LIMIT 1\n                    )\n                    SELECT\n                        sl.key as \"key_address\",\n                        fd.bytecode,\n                        txs.initiator_address as \"creator_address?\",\n                        txs.hash as \"creator_tx_hash?\",\n                        sl.miniblock_number as \"created_in_block_number\",\n                        c.verification_info\n                    FROM sl\n                    JOIN factory_deps fd ON fd.bytecode_hash = sl.value\n                    LEFT JOIN transactions txs ON txs.hash = sl.tx_hash\n                    LEFT JOIN contracts_verification_info c ON c.address = $2\n                    WHERE sl.value != $3\n                "
  },
  "e199251d38cb1f18993863f2e7920f21f7867ae1b48ffc905919de7bd98491de": {
    "describe": {
      "columns": [
        {
          "name": "min?",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                    SELECT MIN(miniblock_number) as \"min?\"\n                    FROM l2_to_l1_logs\n                "
  },
  "e29d263f33257a37f391907b7ff588f416a0350b606f16f4779fa1d3bf4be08b": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "eth_tx_id",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      }
    },
    "query": "UPDATE eth_txs_history\n                SET updated_at = now(), confirmed_at = now()\n                WHERE tx_hash = $1\n                RETURNING id, eth_tx_id"
  },
  "e33ee15019241ee9307cc447b3f92b54a8348abc8bba5568a3d43b6153d73e9b": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "timestamp",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "hash",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "l1_tx_count",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "l2_tx_count",
          "ordinal": 4,
          "type_info": "Int4"
        },
        {
          "name": "base_fee_per_gas",
          "ordinal": 5,
          "type_info": "Numeric"
        },
        {
          "name": "l1_gas_price",
          "ordinal": 6,
          "type_info": "Int8"
        },
        {
          "name": "l2_fair_gas_price",
          "ordinal": 7,
          "type_info": "Int8"
        },
        {
          "name": "bootloader_code_hash",
          "ordinal": 8,
          "type_info": "Bytea"
        },
        {
          "name": "default_aa_code_hash",
          "ordinal": 9,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        true
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                    SELECT number, timestamp, hash, l1_tx_count, l2_tx_count,\n                        base_fee_per_gas, l1_gas_price, l2_fair_gas_price,\n                        bootloader_code_hash, default_aa_code_hash\n                    FROM miniblocks\n                    ORDER BY number DESC \n                    LIMIT 1\n                "
  },
  "e42721cc22fbb2bda84f64057586f019cc5122c8e8723f2a9df778b2aa19fffc": {
    "describe": {
      "columns": [
        {
          "name": "version",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT version FROM contract_verification_solc_versions ORDER by version"
  },
  "e7f7e746aca1c17a8c88aba2db3f7cbd7c639c003580fc72e7b6af4c8ffba595": {
    "describe": {
      "columns": [
        {
          "name": "bytecode_hash",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "bytecode",
          "ordinal": 1,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT bytecode_hash, bytecode FROM factory_deps\n                    WHERE miniblock_number >= $1 AND miniblock_number <= $2"
  },
  "e900682a160af90d532da47a1222fc1d7c9962ee8996dbd9b9bb63f13820cf2b": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "ByteaArray"
        ]
      }
    },
    "query": "DELETE FROM transactions WHERE in_mempool = TRUE AND initiator_address = ANY($1)"
  },
  "e90688187953eb3c8f5ff4b25c4a6b838e6717c720643b441dece5079b441fc2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": []
      }
    },
    "query": "DELETE FROM eth_txs WHERE id >=\n                (SELECT MIN(id) FROM eth_txs WHERE has_failed = TRUE)"
  },
  "ea1477a0c1509f989c0e2aa308cb59bd34b7ec841d5c6c242257ee8bde27ba83": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "scheduler_witness",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "final_node_aggregations",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "status",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 4,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 5,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "attempts",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "aggregation_result_coords",
          "ordinal": 10,
          "type_info": "Bytea"
        },
        {
          "name": "scheduler_witness_blob_url",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "final_node_aggregations_blob_url",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 13,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        false,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE scheduler_witness_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE l1_batch_number = (\n                    SELECT l1_batch_number\n                    FROM scheduler_witness_jobs\n                    WHERE l1_batch_number <= $3\n                    AND\n                    (   status = 'queued'\n                        OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                        OR (status = 'failed' AND attempts < $2)\n                    )\n                    ORDER BY l1_batch_number ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING scheduler_witness_jobs.*\n                "
  },
  "edc9e374698c57ba9f65f83f0e1945e4785d8b4bc95f46ed4d16c095e5511709": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8Array"
        ]
      }
    },
    "query": "\n                UPDATE leaf_aggregation_witness_jobs\n                SET is_blob_cleaned=TRUE\n                WHERE l1_batch_number = ANY($1);\n            "
  },
  "ee7bd820bf35c5c714092494c386eccff25457cff6dc00eb81d9809eaeb95670": {
    "describe": {
      "columns": [
        {
          "name": "is_replaced!",
          "ordinal": 0,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea",
          "Int8",
          "Bytea",
          "Numeric",
          "Numeric",
          "Numeric",
          "Numeric",
          "Bytea",
          "Jsonb",
          "Int4",
          "Bytea",
          "Numeric",
          "Bytea",
          "Bytea",
          "Int8",
          "Int4",
          "Int4",
          "Timestamp"
        ]
      }
    },
    "query": "\n                INSERT INTO transactions\n                (\n                    hash,\n                    is_priority,\n                    initiator_address,\n                    nonce,\n                    signature,\n                    gas_limit,\n                    max_fee_per_gas,\n                    max_priority_fee_per_gas,\n                    gas_per_pubdata_limit,\n                    input,\n                    data,\n                    tx_format,\n                    contract_address,\n                    value,\n                    paymaster,\n                    paymaster_input,\n                    execution_info,\n                    received_at,\n                    created_at,\n                    updated_at\n                )\n                VALUES\n                    (\n                        $1, FALSE, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15,\n                        jsonb_build_object('gas_used', $16::bigint, 'storage_writes', $17::int, 'contracts_used', $18::int),\n                        $19, now(), now()\n                    )\n                ON CONFLICT\n                    (initiator_address, nonce)\n                DO UPDATE\n                    SET hash=$1,\n                        signature=$4,\n                        gas_limit=$5,\n                        max_fee_per_gas=$6,\n                        max_priority_fee_per_gas=$7,\n                        gas_per_pubdata_limit=$8,\n                        input=$9,\n                        data=$10,\n                        tx_format=$11,\n                        contract_address=$12,\n                        value=$13,\n                        paymaster=$14,\n                        paymaster_input=$15,\n                        execution_info=jsonb_build_object('gas_used', $16::bigint, 'storage_writes', $17::int, 'contracts_used', $18::int),\n                        in_mempool=FALSE,\n                        received_at=$19,\n                        created_at=now(),\n                        updated_at=now(),\n                        error = NULL\n                    WHERE transactions.is_priority = FALSE AND transactions.miniblock_number IS NULL\n                    RETURNING (SELECT hash FROM transactions WHERE transactions.initiator_address = $2 AND transactions.nonce = $3) IS NOT NULL as \"is_replaced!\"\n                "
  },
  "efc83e42f5d0238b8996a5b311746527289a5a002ff659531a076680127e8eb4": {
    "describe": {
      "columns": [
        {
          "name": "hash",
          "ordinal": 0,
          "type_info": "Bytea"
        }
      ],
      "nullable": [
        true
      ],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "SELECT hash FROM l1_batches WHERE number = $1"
  },
  "f0308ffa4cc34a305150959ad1a30792c0b2bf493c6fa6183725b731a89c11e8": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "SELECT count(*)\n                FROM storage\n                WHERE\n                    address = $1 AND\n                    value != $2\n                "
  },
  "f0c50c53c3883c1ae59263b40e55011760d64350eff411eef856ff301bb70579": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "l1_batch_tx_index",
          "ordinal": 1,
          "type_info": "Int4"
        }
      ],
      "nullable": [
        true,
        true
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT l1_batch_number, l1_batch_tx_index\n                    FROM transactions\n                    WHERE hash = $1\n                "
  },
  "f0c83c517fdf9696a0acf288f061bd00a993e0b2379b667738b6876e2f588043": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs\n                SET status='queued'\n                WHERE l1_batch_number IN\n                      (SELECT prover_jobs.l1_batch_number\n                       FROM prover_jobs\n                                JOIN node_aggregation_witness_jobs nawj ON prover_jobs.l1_batch_number = nawj.l1_batch_number\n                       WHERE nawj.status = 'waiting_for_proofs'\n                         AND prover_jobs.status = 'successful'\n                         AND prover_jobs.aggregation_round = 1\n                       GROUP BY prover_jobs.l1_batch_number, nawj.number_of_leaf_circuits\n                       HAVING COUNT(*) = nawj.number_of_leaf_circuits)\n                RETURNING l1_batch_number;\n            "
  },
  "f1defa140e20b9c250d3212602dc259c0a35598c2e69d1c42746a8fab6dd8d3e": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Text",
          "Int4",
          "Int4",
          "Text",
          "Text"
        ]
      }
    },
    "query": "\n                UPDATE gpu_prover_queue\n                SET instance_status = 'available', updated_at = now(), queue_free_slots = $3\n                WHERE instance_host = $1::text::inet\n                AND instance_port = $2\n                AND instance_status = 'full'\n                AND region = $4\n                AND zone = $5\n                "
  },
  "f3f7ceb708cc072d66e8609d64ba99e6faa80bf58ff0ce0ef49e882af63522d4": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                    INSERT INTO node_aggregation_witness_jobs\n                        (l1_batch_number, status, created_at, updated_at)\n                    VALUES ($1, 'waiting_for_artifacts', now(), now())\n                    "
  },
  "f5abda9631a44b209b759c6800970d9669a8b5f0280e20ee9901f7c831ab4762": {
    "describe": {
      "columns": [
        {
          "name": "value!",
          "ordinal": 0,
          "type_info": "Bytea"
        },
        {
          "name": "l1_address!",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "l2_address!",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "symbol!",
          "ordinal": 3,
          "type_info": "Varchar"
        },
        {
          "name": "name!",
          "ordinal": 4,
          "type_info": "Varchar"
        },
        {
          "name": "decimals!",
          "ordinal": 5,
          "type_info": "Int4"
        },
        {
          "name": "usd_price?",
          "ordinal": 6,
          "type_info": "Numeric"
        }
      ],
      "nullable": [
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "parameters": {
        "Left": [
          "ByteaArray",
          "Bytea",
          "Bytea"
        ]
      }
    },
    "query": "\n                    SELECT storage.value as \"value!\",\n                        tokens.l1_address as \"l1_address!\", tokens.l2_address as \"l2_address!\",\n                        tokens.symbol as \"symbol!\", tokens.name as \"name!\", tokens.decimals as \"decimals!\", tokens.usd_price as \"usd_price?\"\n                        FROM storage\n                    INNER JOIN tokens ON\n                        storage.address = tokens.l2_address OR (storage.address = $2 AND tokens.l2_address = $3)\n                    WHERE storage.hashed_key = ANY($1)\n                "
  },
  "f76f7d03cce064c0240da83a4ba75a0ce3fb57a18723c278a3d05eaf085f8994": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": [
          "Int8",
          "Int8"
        ]
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM transactions\n                WHERE miniblock_number BETWEEN $1 AND $2"
  },
  "f93109d1cc02f5516b40a4a29082a46fd6fa66972bae710d08cfe6a1484b1616": {
    "describe": {
      "columns": [
        {
          "name": "assembly_code",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "pc_line_mapping",
          "ordinal": 1,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT assembly_code, pc_line_mapping FROM contract_sources WHERE address = $1"
  },
  "fa006dda8f56abb70afc5ba8b6da631747d17ebd03a37ddb72914c4ed2aeb2f5": {
    "describe": {
      "columns": [
        {
          "name": "trace",
          "ordinal": 0,
          "type_info": "Jsonb"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Left": [
          "Bytea"
        ]
      }
    },
    "query": "SELECT trace FROM transaction_traces WHERE tx_hash = $1"
  },
  "fa33d51f8627376832b11bb174354e65e645ee2fb81564a97725518f47ae6f57": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT MAX(number) as \"number\" FROM l1_batches"
  },
  "fa6ef06edd04d20ddbdf22a63092222e89bb84d6093b07bda16407811d9c33c0": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int4"
        },
        {
          "name": "nonce",
          "ordinal": 1,
          "type_info": "Int8"
        },
        {
          "name": "raw_tx",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "contract_address",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "tx_type",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "gas_used",
          "ordinal": 5,
          "type_info": "Int8"
        },
        {
          "name": "created_at",
          "ordinal": 6,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 7,
          "type_info": "Timestamp"
        },
        {
          "name": "has_failed",
          "ordinal": 8,
          "type_info": "Bool"
        },
        {
          "name": "sent_at_block",
          "ordinal": 9,
          "type_info": "Int4"
        },
        {
          "name": "confirmed_eth_tx_history_id",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "predicted_gas_cost",
          "ordinal": 11,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Int4"
        ]
      }
    },
    "query": "SELECT * FROM eth_txs WHERE id = $1"
  },
  "fadc14334d48d2b29acd8433245e337655aeb3472c65922b7949ba84b32e9938": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Text"
        ]
      }
    },
    "query": "INSERT INTO witness_inputs(l1_batch_number, merkle_tree_paths, merkel_tree_paths_blob_url, status, created_at, updated_at) VALUES ($1, $2, $3, 'queued', now(), now())\n                 ON CONFLICT (l1_batch_number) DO NOTHING"
  },
  "fb016c8fa4983478572c0e9dcffd058d226cec181f4336925fb2d19752fd7427": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8",
          "Bytea",
          "Bytea",
          "Text",
          "Text",
          "Int4"
        ]
      }
    },
    "query": "\n                    INSERT INTO leaf_aggregation_witness_jobs\n                        (l1_batch_number, basic_circuits, basic_circuits_inputs, basic_circuits_blob_url, basic_circuits_inputs_blob_url, number_of_basic_circuits, status, created_at, updated_at)\n                    VALUES ($1, $2, $3, $4, $5, $6, 'waiting_for_proofs', now(), now())\n                    "
  },
  "fc52c356fd09d82da89a435d08398d9b773494491404b5c84fc14c1c1d374b59": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Left": [
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE contract_verification_requests\n                SET status = 'successful', updated_at = now()\n                WHERE id = $1\n                "
  },
  "ff56f2104af03e232748debd5ec2c71495934682fa6ce9212e93084f1eb1087b": {
    "describe": {
      "columns": [
        {
          "name": "l1_batch_number",
          "ordinal": 0,
          "type_info": "Int8"
        },
        {
          "name": "leaf_layer_subqueues",
          "ordinal": 1,
          "type_info": "Bytea"
        },
        {
          "name": "aggregation_outputs",
          "ordinal": 2,
          "type_info": "Bytea"
        },
        {
          "name": "number_of_leaf_circuits",
          "ordinal": 3,
          "type_info": "Int4"
        },
        {
          "name": "status",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "processing_started_at",
          "ordinal": 5,
          "type_info": "Timestamp"
        },
        {
          "name": "time_taken",
          "ordinal": 6,
          "type_info": "Time"
        },
        {
          "name": "error",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "created_at",
          "ordinal": 8,
          "type_info": "Timestamp"
        },
        {
          "name": "updated_at",
          "ordinal": 9,
          "type_info": "Timestamp"
        },
        {
          "name": "attempts",
          "ordinal": 10,
          "type_info": "Int4"
        },
        {
          "name": "leaf_layer_subqueues_blob_url",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "aggregation_outputs_blob_url",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "is_blob_cleaned",
          "ordinal": 13,
          "type_info": "Bool"
        }
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false,
        false,
        true,
        true,
        false
      ],
      "parameters": {
        "Left": [
          "Interval",
          "Int4",
          "Int8"
        ]
      }
    },
    "query": "\n                UPDATE node_aggregation_witness_jobs\n                SET status = 'in_progress', attempts = attempts + 1,\n                    updated_at = now(), processing_started_at = now()\n                WHERE l1_batch_number = (\n                    SELECT l1_batch_number\n                    FROM node_aggregation_witness_jobs\n                    WHERE l1_batch_number <= $3\n                    AND\n                    (   status = 'queued'\n                        OR (status = 'in_progress' AND processing_started_at < now() - $1::interval)\n                        OR (status = 'failed' AND attempts < $2)\n                    )\n                    ORDER BY l1_batch_number ASC\n                    LIMIT 1\n                    FOR UPDATE\n                    SKIP LOCKED\n                )\n                RETURNING node_aggregation_witness_jobs.*\n            "
  },
  "5f28e3dbd4971759449ed72fd163f5c8a2c5eed03aabae578c9053580805ee77": {
    "describe": {
      "columns": [
        {
          "name": "number",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COALESCE(MAX( NUMBER ),0) AS \"number\" FROM miniblocks\n                WHERE l1_batch_number = ( SELECT MAX ( NUMBER ) FROM l1_batches WHERE eth_prove_tx_id IS NOT NULL)"
  },
  "66f1f192849b412798bc36dfebaff120cdb2db500fea9e05d63938b93d344a39": {
    "describe": {
      "columns": [
        {
          "name": "count!",
          "ordinal": 0,
          "type_info": "Int8"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT COUNT(*) as \"count!\" FROM transactions WHERE in_mempool=TRUE"
  },
  "59b547779f15c903cca098a3a264a7d48ffccec6ec5151b3f4cd37d18c141730": {
    "describe": {
      "columns": [
        {
          "name": "updated_at?",
          "ordinal": 0,
          "type_info": "Timestamp"
        }
      ],
      "nullable": [
        null
      ],
      "parameters": {
        "Left": []
      }
    },
    "query": "SELECT updated_at as \"updated_at?\"  from eth_txs WHERE confirmed_eth_tx_history_id IS NOT NULL and tx_type = 'PublishProofBlocksOnchain'  ORDER BY id DESC limit 1"
  }
}